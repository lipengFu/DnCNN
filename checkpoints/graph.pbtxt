node {
  name: "input_producer/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "./data/data.tfrecords"
      }
    }
  }
}
node {
  name: "input_producer/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_producer/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_producer/Greater"
  op: "Greater"
  input: "input_producer/Size"
  input: "input_producer/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "input_producer/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "input_producer/Assert/Assert"
  op: "Assert"
  input: "input_producer/Greater"
  input: "input_producer/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "input_producer/Identity"
  op: "Identity"
  input: "input_producer/Const"
  input: "^input_producer/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "input_producer/Identity"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "input_producer"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "input_producer"
  input: "input_producer/RandomShuffle"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/ToFloat"
  op: "Cast"
  input: "input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "input_producer/mul"
  op: "Mul"
  input: "input_producer/ToFloat"
  input: "input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "input_producer/fraction_of_32_full/tags"
  input: "input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TFRecordReaderV2"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "ReaderReadV2"
  op: "ReaderReadV2"
  input: "TFRecordReaderV2"
  input: "input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ParseSingleExample/ParseSingleExample"
  op: "ParseSingleExample"
  input: "ReaderReadV2:1"
  input: "ParseSingleExample/Const"
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dense_keys"
    value {
      list {
        s: "image_raw"
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "num_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "sparse_keys"
    value {
      list {
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "DecodeJpeg"
  op: "DecodeJpeg"
  input: "ParseSingleExample/ParseSingleExample"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "acceptable_fraction"
    value {
      f: 1.0
    }
  }
  attr {
    key: "channels"
    value {
      i: 0
    }
  }
  attr {
    key: "dct_method"
    value {
      s: ""
    }
  }
  attr {
    key: "fancy_upscaling"
    value {
      b: true
    }
  }
  attr {
    key: "ratio"
    value {
      i: 1
    }
  }
  attr {
    key: "try_recover_truncated"
    value {
      b: false
    }
  }
}
node {
  name: "random_crop/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "random_crop/Shape"
  op: "Shape"
  input: "DecodeJpeg"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "random_crop/GreaterEqual"
  op: "GreaterEqual"
  input: "random_crop/Shape"
  input: "random_crop/size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "random_crop/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "random_crop/All"
  op: "All"
  input: "random_crop/GreaterEqual"
  input: "random_crop/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "random_crop/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Need value.shape >= size, got "
      }
    }
  }
}
node {
  name: "random_crop/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Need value.shape >= size, got "
      }
    }
  }
}
node {
  name: "random_crop/Assert/Assert"
  op: "Assert"
  input: "random_crop/All"
  input: "random_crop/Assert/Assert/data_0"
  input: "random_crop/Shape"
  input: "random_crop/size"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 1000
    }
  }
}
node {
  name: "random_crop/control_dependency"
  op: "Identity"
  input: "random_crop/Shape"
  input: "^random_crop/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@random_crop/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "random_crop/sub"
  op: "Sub"
  input: "random_crop/control_dependency"
  input: "random_crop/size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "random_crop/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "random_crop/add"
  op: "Add"
  input: "random_crop/sub"
  input: "random_crop/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "random_crop/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "random_crop/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "random_crop/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2147483647
      }
    }
  }
}
node {
  name: "random_crop/random_uniform"
  op: "RandomUniformInt"
  input: "random_crop/Shape_1"
  input: "random_crop/random_uniform/min"
  input: "random_crop/random_uniform/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "random_crop/mod"
  op: "FloorMod"
  input: "random_crop/random_uniform"
  input: "random_crop/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "random_crop"
  op: "Slice"
  input: "DecodeJpeg"
  input: "random_crop/mod"
  input: "random_crop/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_image/Cast"
  op: "Cast"
  input: "random_crop"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "convert_image/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.003921568859368563
      }
    }
  }
}
node {
  name: "convert_image"
  op: "Mul"
  input: "convert_image/Cast"
  input: "convert_image/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "random_normal/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "random_normal/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "random_normal/mul"
  op: "Mul"
  input: "random_normal/RandomStandardNormal"
  input: "random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "random_normal"
  op: "Add"
  input: "random_normal/mul"
  input: "random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09803921729326248
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "mul/x"
  input: "random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "convert_image"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "add"
  input: "convert_image"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 2048
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 1024
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "random_shuffle_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "random_shuffle_queue"
  input: "add"
  input: "sub"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueMany/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueMany"
  op: "QueueDequeueManyV2"
  input: "random_shuffle_queue"
  input: "random_shuffle_queue_DequeueMany/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09975093603134155
      }
    }
  }
}
node {
  name: "conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09975093603134155
      }
    }
  }
}
node {
  name: "conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_1/weights/Initializer/random_uniform/max"
  input: "conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_1/weights/Initializer/random_uniform/mul"
  input: "conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_1/weights/Assign"
  op: "Assign"
  input: "conv_1/weights"
  input: "conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_1/weights/read"
  op: "Identity"
  input: "conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_1/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_1/biases/Assign"
  op: "Assign"
  input: "conv_1/biases"
  input: "conv_1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_1/biases/read"
  op: "Identity"
  input: "conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_1/Conv2D"
  op: "Conv2D"
  input: "random_shuffle_queue_DequeueMany"
  input: "conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_1/BiasAdd"
  op: "BiasAdd"
  input: "conv_1/Conv2D"
  input: "conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv_1/Relu"
  op: "Relu"
  input: "conv_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_2/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_2/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_2/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_2/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_2/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_2/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_2/weights/Initializer/random_uniform/max"
  input: "conv_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_2/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_2/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_2/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_2/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_2/weights/Initializer/random_uniform/mul"
  input: "conv_2/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_2/weights/Assign"
  op: "Assign"
  input: "conv_2/weights"
  input: "conv_2/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_2/weights/read"
  op: "Identity"
  input: "conv_2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_2/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_2/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_2/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_2/biases/Assign"
  op: "Assign"
  input: "conv_2/biases"
  input: "conv_2/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_2/biases/read"
  op: "Identity"
  input: "conv_2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_2/Conv2D"
  op: "Conv2D"
  input: "conv_1/Relu"
  input: "conv_2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_2/BiasAdd"
  op: "BiasAdd"
  input: "conv_2/Conv2D"
  input: "conv_2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm/gamma/Assign"
  op: "Assign"
  input: "BatchNorm/gamma"
  input: "BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm/gamma/read"
  op: "Identity"
  input: "BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm/beta/Assign"
  op: "Assign"
  input: "BatchNorm/beta"
  input: "BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm/beta/read"
  op: "Identity"
  input: "BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm/moving_mean"
  input: "BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm/moving_variance"
  input: "BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_2/BiasAdd"
  input: "BatchNorm/gamma/read"
  input: "BatchNorm/beta/read"
  input: "BatchNorm/Const"
  input: "BatchNorm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm/AssignMovingAvg/sub/x"
  input: "BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm/moving_mean/read"
  input: "BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm/AssignMovingAvg/sub_1"
  input: "BatchNorm/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm/moving_mean"
  input: "BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm/AssignMovingAvg_1/sub/x"
  input: "BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm/moving_variance/read"
  input: "BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm/AssignMovingAvg_1/sub_1"
  input: "BatchNorm/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm/moving_variance"
  input: "BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm/Relu"
  op: "Relu"
  input: "BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_3/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_3/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_3/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_3/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_3/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_3/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_3/weights/Initializer/random_uniform/max"
  input: "conv_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_3/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_3/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_3/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_3/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_3/weights/Initializer/random_uniform/mul"
  input: "conv_3/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_3/weights/Assign"
  op: "Assign"
  input: "conv_3/weights"
  input: "conv_3/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_3/weights/read"
  op: "Identity"
  input: "conv_3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_3/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_3/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_3/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_3/biases/Assign"
  op: "Assign"
  input: "conv_3/biases"
  input: "conv_3/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_3/biases/read"
  op: "Identity"
  input: "conv_3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_3/Conv2D"
  op: "Conv2D"
  input: "BatchNorm/Relu"
  input: "conv_3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_3/BiasAdd"
  op: "BiasAdd"
  input: "conv_3/Conv2D"
  input: "conv_3/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_1/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_1/gamma"
  input: "BatchNorm_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_1/gamma/read"
  op: "Identity"
  input: "BatchNorm_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_1/beta/Assign"
  op: "Assign"
  input: "BatchNorm_1/beta"
  input: "BatchNorm_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_1/beta/read"
  op: "Identity"
  input: "BatchNorm_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_1/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_1/moving_mean"
  input: "BatchNorm_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_1/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_1/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_1/moving_variance"
  input: "BatchNorm_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_1/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_3/BiasAdd"
  input: "BatchNorm_1/gamma/read"
  input: "BatchNorm_1/beta/read"
  input: "BatchNorm_1/Const"
  input: "BatchNorm_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_1/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_1/AssignMovingAvg/sub/x"
  input: "BatchNorm_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_1/moving_mean/read"
  input: "BatchNorm_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_1/AssignMovingAvg/sub_1"
  input: "BatchNorm_1/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_1/moving_mean"
  input: "BatchNorm_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_1/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_1/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_1/moving_variance/read"
  input: "BatchNorm_1/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_1/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_1/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_1/moving_variance"
  input: "BatchNorm_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_1/Relu"
  op: "Relu"
  input: "BatchNorm_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_4/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_4/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_4/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_4/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_4/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_4/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_4/weights/Initializer/random_uniform/max"
  input: "conv_4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_4/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_4/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_4/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_4/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_4/weights/Initializer/random_uniform/mul"
  input: "conv_4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_4/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_4/weights/Assign"
  op: "Assign"
  input: "conv_4/weights"
  input: "conv_4/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_4/weights/read"
  op: "Identity"
  input: "conv_4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_4/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_4/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_4/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_4/biases/Assign"
  op: "Assign"
  input: "conv_4/biases"
  input: "conv_4/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_4/biases/read"
  op: "Identity"
  input: "conv_4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_4/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_4/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_1/Relu"
  input: "conv_4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_4/BiasAdd"
  op: "BiasAdd"
  input: "conv_4/Conv2D"
  input: "conv_4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_2/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_2/gamma"
  input: "BatchNorm_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_2/gamma/read"
  op: "Identity"
  input: "BatchNorm_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_2/beta/Assign"
  op: "Assign"
  input: "BatchNorm_2/beta"
  input: "BatchNorm_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_2/beta/read"
  op: "Identity"
  input: "BatchNorm_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_2/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_2/moving_mean"
  input: "BatchNorm_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_2/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_2/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_2/moving_variance"
  input: "BatchNorm_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_2/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_4/BiasAdd"
  input: "BatchNorm_2/gamma/read"
  input: "BatchNorm_2/beta/read"
  input: "BatchNorm_2/Const"
  input: "BatchNorm_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_2/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_2/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_2/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_2/AssignMovingAvg/sub/x"
  input: "BatchNorm_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_2/moving_mean/read"
  input: "BatchNorm_2/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_2/AssignMovingAvg/sub_1"
  input: "BatchNorm_2/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_2/moving_mean"
  input: "BatchNorm_2/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_2/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_2/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_2/moving_variance/read"
  input: "BatchNorm_2/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_2/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_2/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_2/moving_variance"
  input: "BatchNorm_2/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_2/Relu"
  op: "Relu"
  input: "BatchNorm_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_5/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_5/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_5/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_5/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_5/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_5/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_5/weights/Initializer/random_uniform/max"
  input: "conv_5/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_5/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_5/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_5/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_5/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_5/weights/Initializer/random_uniform/mul"
  input: "conv_5/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_5/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_5/weights/Assign"
  op: "Assign"
  input: "conv_5/weights"
  input: "conv_5/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_5/weights/read"
  op: "Identity"
  input: "conv_5/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_5/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_5/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_5/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_5/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_5/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_5/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_5/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_5/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_5/biases/Assign"
  op: "Assign"
  input: "conv_5/biases"
  input: "conv_5/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_5/biases/read"
  op: "Identity"
  input: "conv_5/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_5/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_5/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_2/Relu"
  input: "conv_5/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_5/BiasAdd"
  op: "BiasAdd"
  input: "conv_5/Conv2D"
  input: "conv_5/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_3/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_3/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_3/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_3/gamma"
  input: "BatchNorm_3/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_3/gamma/read"
  op: "Identity"
  input: "BatchNorm_3/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_3/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_3/beta/Assign"
  op: "Assign"
  input: "BatchNorm_3/beta"
  input: "BatchNorm_3/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_3/beta/read"
  op: "Identity"
  input: "BatchNorm_3/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_3/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_3/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_3/moving_mean"
  input: "BatchNorm_3/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_3/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_3/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_3/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_3/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_3/moving_variance"
  input: "BatchNorm_3/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_3/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_3/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_5/BiasAdd"
  input: "BatchNorm_3/gamma/read"
  input: "BatchNorm_3/beta/read"
  input: "BatchNorm_3/Const"
  input: "BatchNorm_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_3/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_3/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_3/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_3/AssignMovingAvg/sub/x"
  input: "BatchNorm_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_3/moving_mean/read"
  input: "BatchNorm_3/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_3/AssignMovingAvg/sub_1"
  input: "BatchNorm_3/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_3/moving_mean"
  input: "BatchNorm_3/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_3/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_3/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_3/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_3/moving_variance/read"
  input: "BatchNorm_3/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_3/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_3/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_3/moving_variance"
  input: "BatchNorm_3/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_3/Relu"
  op: "Relu"
  input: "BatchNorm_3/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_6/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_6/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_6/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_6/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_6/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_6/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_6/weights/Initializer/random_uniform/max"
  input: "conv_6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_6/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_6/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_6/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_6/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_6/weights/Initializer/random_uniform/mul"
  input: "conv_6/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_6/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_6/weights/Assign"
  op: "Assign"
  input: "conv_6/weights"
  input: "conv_6/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_6/weights/read"
  op: "Identity"
  input: "conv_6/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_6/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_6/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_6/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_6/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_6/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_6/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_6/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_6/biases/Assign"
  op: "Assign"
  input: "conv_6/biases"
  input: "conv_6/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_6/biases/read"
  op: "Identity"
  input: "conv_6/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_6/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_6/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_3/Relu"
  input: "conv_6/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_6/BiasAdd"
  op: "BiasAdd"
  input: "conv_6/Conv2D"
  input: "conv_6/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_4/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_4/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_4/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_4/gamma"
  input: "BatchNorm_4/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_4/gamma/read"
  op: "Identity"
  input: "BatchNorm_4/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_4/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_4/beta/Assign"
  op: "Assign"
  input: "BatchNorm_4/beta"
  input: "BatchNorm_4/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_4/beta/read"
  op: "Identity"
  input: "BatchNorm_4/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_4/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_4/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_4/moving_mean"
  input: "BatchNorm_4/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_4/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_4/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_4/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_4/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_4/moving_variance"
  input: "BatchNorm_4/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_4/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_4/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_6/BiasAdd"
  input: "BatchNorm_4/gamma/read"
  input: "BatchNorm_4/beta/read"
  input: "BatchNorm_4/Const"
  input: "BatchNorm_4/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_4/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_4/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_4/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_4/AssignMovingAvg/sub/x"
  input: "BatchNorm_4/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_4/moving_mean/read"
  input: "BatchNorm_4/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_4/AssignMovingAvg/sub_1"
  input: "BatchNorm_4/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_4/moving_mean"
  input: "BatchNorm_4/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_4/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_4/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_4/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_4/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_4/moving_variance/read"
  input: "BatchNorm_4/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_4/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_4/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_4/moving_variance"
  input: "BatchNorm_4/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_4/Relu"
  op: "Relu"
  input: "BatchNorm_4/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_7/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_7/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_7/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_7/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_7/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_7/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_7/weights/Initializer/random_uniform/max"
  input: "conv_7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_7/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_7/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_7/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_7/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_7/weights/Initializer/random_uniform/mul"
  input: "conv_7/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_7/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_7/weights/Assign"
  op: "Assign"
  input: "conv_7/weights"
  input: "conv_7/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_7/weights/read"
  op: "Identity"
  input: "conv_7/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_7/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_7/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_7/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_7/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_7/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_7/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_7/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_7/biases/Assign"
  op: "Assign"
  input: "conv_7/biases"
  input: "conv_7/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_7/biases/read"
  op: "Identity"
  input: "conv_7/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_7/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_7/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_4/Relu"
  input: "conv_7/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_7/BiasAdd"
  op: "BiasAdd"
  input: "conv_7/Conv2D"
  input: "conv_7/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_5/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_5/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_5/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_5/gamma"
  input: "BatchNorm_5/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_5/gamma/read"
  op: "Identity"
  input: "BatchNorm_5/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_5/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_5/beta/Assign"
  op: "Assign"
  input: "BatchNorm_5/beta"
  input: "BatchNorm_5/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_5/beta/read"
  op: "Identity"
  input: "BatchNorm_5/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_5/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_5/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_5/moving_mean"
  input: "BatchNorm_5/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_5/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_5/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_5/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_5/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_5/moving_variance"
  input: "BatchNorm_5/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_5/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_5/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_7/BiasAdd"
  input: "BatchNorm_5/gamma/read"
  input: "BatchNorm_5/beta/read"
  input: "BatchNorm_5/Const"
  input: "BatchNorm_5/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_5/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_5/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_5/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_5/AssignMovingAvg/sub/x"
  input: "BatchNorm_5/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_5/moving_mean/read"
  input: "BatchNorm_5/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_5/AssignMovingAvg/sub_1"
  input: "BatchNorm_5/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_5/moving_mean"
  input: "BatchNorm_5/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_5/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_5/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_5/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_5/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_5/moving_variance/read"
  input: "BatchNorm_5/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_5/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_5/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_5/moving_variance"
  input: "BatchNorm_5/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_5/Relu"
  op: "Relu"
  input: "BatchNorm_5/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_8/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_8/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_8/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_8/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_8/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_8/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_8/weights/Initializer/random_uniform/max"
  input: "conv_8/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_8/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_8/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_8/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_8/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_8/weights/Initializer/random_uniform/mul"
  input: "conv_8/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_8/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_8/weights/Assign"
  op: "Assign"
  input: "conv_8/weights"
  input: "conv_8/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_8/weights/read"
  op: "Identity"
  input: "conv_8/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_8/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_8/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_8/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_8/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_8/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_8/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_8/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_8/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_8/biases/Assign"
  op: "Assign"
  input: "conv_8/biases"
  input: "conv_8/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_8/biases/read"
  op: "Identity"
  input: "conv_8/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_8/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_8/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_5/Relu"
  input: "conv_8/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_8/BiasAdd"
  op: "BiasAdd"
  input: "conv_8/Conv2D"
  input: "conv_8/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_6/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_6/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_6/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_6/gamma"
  input: "BatchNorm_6/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_6/gamma/read"
  op: "Identity"
  input: "BatchNorm_6/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_6/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_6/beta/Assign"
  op: "Assign"
  input: "BatchNorm_6/beta"
  input: "BatchNorm_6/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_6/beta/read"
  op: "Identity"
  input: "BatchNorm_6/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_6/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_6/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_6/moving_mean"
  input: "BatchNorm_6/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_6/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_6/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_6/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_6/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_6/moving_variance"
  input: "BatchNorm_6/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_6/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_6/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_8/BiasAdd"
  input: "BatchNorm_6/gamma/read"
  input: "BatchNorm_6/beta/read"
  input: "BatchNorm_6/Const"
  input: "BatchNorm_6/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_6/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_6/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_6/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_6/AssignMovingAvg/sub/x"
  input: "BatchNorm_6/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_6/moving_mean/read"
  input: "BatchNorm_6/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_6/AssignMovingAvg/sub_1"
  input: "BatchNorm_6/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_6/moving_mean"
  input: "BatchNorm_6/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_6/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_6/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_6/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_6/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_6/moving_variance/read"
  input: "BatchNorm_6/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_6/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_6/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_6/moving_variance"
  input: "BatchNorm_6/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_6/Relu"
  op: "Relu"
  input: "BatchNorm_6/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_9/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_9/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_9/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_9/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_9/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_9/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_9/weights/Initializer/random_uniform/max"
  input: "conv_9/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_9/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_9/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_9/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_9/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_9/weights/Initializer/random_uniform/mul"
  input: "conv_9/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_9/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_9/weights/Assign"
  op: "Assign"
  input: "conv_9/weights"
  input: "conv_9/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_9/weights/read"
  op: "Identity"
  input: "conv_9/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_9/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_9/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_9/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_9/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_9/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_9/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_9/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_9/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_9/biases/Assign"
  op: "Assign"
  input: "conv_9/biases"
  input: "conv_9/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_9/biases/read"
  op: "Identity"
  input: "conv_9/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_9/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_9/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_6/Relu"
  input: "conv_9/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_9/BiasAdd"
  op: "BiasAdd"
  input: "conv_9/Conv2D"
  input: "conv_9/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_7/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_7/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_7/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_7/gamma"
  input: "BatchNorm_7/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_7/gamma/read"
  op: "Identity"
  input: "BatchNorm_7/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_7/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_7/beta/Assign"
  op: "Assign"
  input: "BatchNorm_7/beta"
  input: "BatchNorm_7/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_7/beta/read"
  op: "Identity"
  input: "BatchNorm_7/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_7/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_7/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_7/moving_mean"
  input: "BatchNorm_7/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_7/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_7/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_7/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_7/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_7/moving_variance"
  input: "BatchNorm_7/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_7/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_7/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_9/BiasAdd"
  input: "BatchNorm_7/gamma/read"
  input: "BatchNorm_7/beta/read"
  input: "BatchNorm_7/Const"
  input: "BatchNorm_7/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_7/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_7/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_7/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_7/AssignMovingAvg/sub/x"
  input: "BatchNorm_7/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_7/moving_mean/read"
  input: "BatchNorm_7/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_7/AssignMovingAvg/sub_1"
  input: "BatchNorm_7/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_7/moving_mean"
  input: "BatchNorm_7/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_7/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_7/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_7/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_7/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_7/moving_variance/read"
  input: "BatchNorm_7/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_7/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_7/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_7/moving_variance"
  input: "BatchNorm_7/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_7/Relu"
  op: "Relu"
  input: "BatchNorm_7/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_10/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_10/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_10/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_10/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_10/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_10/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_10/weights/Initializer/random_uniform/max"
  input: "conv_10/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_10/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_10/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_10/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_10/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_10/weights/Initializer/random_uniform/mul"
  input: "conv_10/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_10/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_10/weights/Assign"
  op: "Assign"
  input: "conv_10/weights"
  input: "conv_10/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_10/weights/read"
  op: "Identity"
  input: "conv_10/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_10/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_10/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_10/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_10/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_10/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_10/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_10/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_10/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_10/biases/Assign"
  op: "Assign"
  input: "conv_10/biases"
  input: "conv_10/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_10/biases/read"
  op: "Identity"
  input: "conv_10/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_10/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_10/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_7/Relu"
  input: "conv_10/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_10/BiasAdd"
  op: "BiasAdd"
  input: "conv_10/Conv2D"
  input: "conv_10/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_8/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_8/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_8/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_8/gamma"
  input: "BatchNorm_8/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_8/gamma/read"
  op: "Identity"
  input: "BatchNorm_8/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_8/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_8/beta/Assign"
  op: "Assign"
  input: "BatchNorm_8/beta"
  input: "BatchNorm_8/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_8/beta/read"
  op: "Identity"
  input: "BatchNorm_8/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_8/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_8/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_8/moving_mean"
  input: "BatchNorm_8/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_8/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_8/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_8/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_8/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_8/moving_variance"
  input: "BatchNorm_8/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_8/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_8/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_10/BiasAdd"
  input: "BatchNorm_8/gamma/read"
  input: "BatchNorm_8/beta/read"
  input: "BatchNorm_8/Const"
  input: "BatchNorm_8/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_8/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_8/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_8/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_8/AssignMovingAvg/sub/x"
  input: "BatchNorm_8/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_8/moving_mean/read"
  input: "BatchNorm_8/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_8/AssignMovingAvg/sub_1"
  input: "BatchNorm_8/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_8/moving_mean"
  input: "BatchNorm_8/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_8/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_8/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_8/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_8/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_8/moving_variance/read"
  input: "BatchNorm_8/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_8/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_8/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_8/moving_variance"
  input: "BatchNorm_8/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_8/Relu"
  op: "Relu"
  input: "BatchNorm_8/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_11/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_11/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_11/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_11/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_11/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_11/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_11/weights/Initializer/random_uniform/max"
  input: "conv_11/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_11/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_11/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_11/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_11/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_11/weights/Initializer/random_uniform/mul"
  input: "conv_11/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_11/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_11/weights/Assign"
  op: "Assign"
  input: "conv_11/weights"
  input: "conv_11/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_11/weights/read"
  op: "Identity"
  input: "conv_11/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_11/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_11/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_11/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_11/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_11/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_11/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_11/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_11/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_11/biases/Assign"
  op: "Assign"
  input: "conv_11/biases"
  input: "conv_11/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_11/biases/read"
  op: "Identity"
  input: "conv_11/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_11/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_11/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_8/Relu"
  input: "conv_11/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_11/BiasAdd"
  op: "BiasAdd"
  input: "conv_11/Conv2D"
  input: "conv_11/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_9/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_9/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_9/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_9/gamma"
  input: "BatchNorm_9/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_9/gamma/read"
  op: "Identity"
  input: "BatchNorm_9/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_9/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_9/beta/Assign"
  op: "Assign"
  input: "BatchNorm_9/beta"
  input: "BatchNorm_9/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_9/beta/read"
  op: "Identity"
  input: "BatchNorm_9/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_9/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_9/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_9/moving_mean"
  input: "BatchNorm_9/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_9/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_9/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_9/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_9/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_9/moving_variance"
  input: "BatchNorm_9/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_9/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_9/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_11/BiasAdd"
  input: "BatchNorm_9/gamma/read"
  input: "BatchNorm_9/beta/read"
  input: "BatchNorm_9/Const"
  input: "BatchNorm_9/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_9/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_9/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_9/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_9/AssignMovingAvg/sub/x"
  input: "BatchNorm_9/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_9/moving_mean/read"
  input: "BatchNorm_9/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_9/AssignMovingAvg/sub_1"
  input: "BatchNorm_9/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_9/moving_mean"
  input: "BatchNorm_9/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_9/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_9/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_9/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_9/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_9/moving_variance/read"
  input: "BatchNorm_9/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_9/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_9/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_9/moving_variance"
  input: "BatchNorm_9/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_9/Relu"
  op: "Relu"
  input: "BatchNorm_9/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_12/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_12/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_12/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_12/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_12/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_12/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_12/weights/Initializer/random_uniform/max"
  input: "conv_12/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_12/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_12/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_12/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_12/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_12/weights/Initializer/random_uniform/mul"
  input: "conv_12/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_12/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_12/weights/Assign"
  op: "Assign"
  input: "conv_12/weights"
  input: "conv_12/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_12/weights/read"
  op: "Identity"
  input: "conv_12/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_12/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_12/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_12/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_12/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_12/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_12/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_12/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_12/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_12/biases/Assign"
  op: "Assign"
  input: "conv_12/biases"
  input: "conv_12/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_12/biases/read"
  op: "Identity"
  input: "conv_12/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_12/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_12/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_9/Relu"
  input: "conv_12/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_12/BiasAdd"
  op: "BiasAdd"
  input: "conv_12/Conv2D"
  input: "conv_12/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_10/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_10/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_10/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_10/gamma"
  input: "BatchNorm_10/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_10/gamma/read"
  op: "Identity"
  input: "BatchNorm_10/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_10/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_10/beta/Assign"
  op: "Assign"
  input: "BatchNorm_10/beta"
  input: "BatchNorm_10/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_10/beta/read"
  op: "Identity"
  input: "BatchNorm_10/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_10/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_10/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_10/moving_mean"
  input: "BatchNorm_10/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_10/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_10/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_10/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_10/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_10/moving_variance"
  input: "BatchNorm_10/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_10/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_10/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_12/BiasAdd"
  input: "BatchNorm_10/gamma/read"
  input: "BatchNorm_10/beta/read"
  input: "BatchNorm_10/Const"
  input: "BatchNorm_10/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_10/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_10/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_10/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_10/AssignMovingAvg/sub/x"
  input: "BatchNorm_10/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_10/moving_mean/read"
  input: "BatchNorm_10/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_10/AssignMovingAvg/sub_1"
  input: "BatchNorm_10/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_10/moving_mean"
  input: "BatchNorm_10/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_10/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_10/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_10/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_10/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_10/moving_variance/read"
  input: "BatchNorm_10/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_10/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_10/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_10/moving_variance"
  input: "BatchNorm_10/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_10/Relu"
  op: "Relu"
  input: "BatchNorm_10/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_13/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_13/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_13/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_13/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_13/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_13/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_13/weights/Initializer/random_uniform/max"
  input: "conv_13/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_13/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_13/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_13/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_13/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_13/weights/Initializer/random_uniform/mul"
  input: "conv_13/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_13/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_13/weights/Assign"
  op: "Assign"
  input: "conv_13/weights"
  input: "conv_13/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_13/weights/read"
  op: "Identity"
  input: "conv_13/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_13/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_13/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_13/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_13/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_13/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_13/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_13/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_13/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_13/biases/Assign"
  op: "Assign"
  input: "conv_13/biases"
  input: "conv_13/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_13/biases/read"
  op: "Identity"
  input: "conv_13/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_13/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_13/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_10/Relu"
  input: "conv_13/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_13/BiasAdd"
  op: "BiasAdd"
  input: "conv_13/Conv2D"
  input: "conv_13/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_11/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_11/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_11/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_11/gamma"
  input: "BatchNorm_11/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_11/gamma/read"
  op: "Identity"
  input: "BatchNorm_11/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_11/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_11/beta/Assign"
  op: "Assign"
  input: "BatchNorm_11/beta"
  input: "BatchNorm_11/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_11/beta/read"
  op: "Identity"
  input: "BatchNorm_11/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_11/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_11/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_11/moving_mean"
  input: "BatchNorm_11/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_11/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_11/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_11/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_11/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_11/moving_variance"
  input: "BatchNorm_11/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_11/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_11/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_13/BiasAdd"
  input: "BatchNorm_11/gamma/read"
  input: "BatchNorm_11/beta/read"
  input: "BatchNorm_11/Const"
  input: "BatchNorm_11/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_11/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_11/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_11/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_11/AssignMovingAvg/sub/x"
  input: "BatchNorm_11/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_11/moving_mean/read"
  input: "BatchNorm_11/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_11/AssignMovingAvg/sub_1"
  input: "BatchNorm_11/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_11/moving_mean"
  input: "BatchNorm_11/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_11/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_11/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_11/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_11/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_11/moving_variance/read"
  input: "BatchNorm_11/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_11/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_11/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_11/moving_variance"
  input: "BatchNorm_11/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_11/Relu"
  op: "Relu"
  input: "BatchNorm_11/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_14/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_14/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_14/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_14/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_14/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_14/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_14/weights/Initializer/random_uniform/max"
  input: "conv_14/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_14/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_14/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_14/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_14/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_14/weights/Initializer/random_uniform/mul"
  input: "conv_14/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_14/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_14/weights/Assign"
  op: "Assign"
  input: "conv_14/weights"
  input: "conv_14/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_14/weights/read"
  op: "Identity"
  input: "conv_14/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_14/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_14/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_14/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_14/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_14/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_14/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_14/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_14/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_14/biases/Assign"
  op: "Assign"
  input: "conv_14/biases"
  input: "conv_14/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_14/biases/read"
  op: "Identity"
  input: "conv_14/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_14/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_14/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_11/Relu"
  input: "conv_14/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_14/BiasAdd"
  op: "BiasAdd"
  input: "conv_14/Conv2D"
  input: "conv_14/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_12/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_12/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_12/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_12/gamma"
  input: "BatchNorm_12/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_12/gamma/read"
  op: "Identity"
  input: "BatchNorm_12/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_12/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_12/beta/Assign"
  op: "Assign"
  input: "BatchNorm_12/beta"
  input: "BatchNorm_12/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_12/beta/read"
  op: "Identity"
  input: "BatchNorm_12/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_12/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_12/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_12/moving_mean"
  input: "BatchNorm_12/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_12/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_12/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_12/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_12/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_12/moving_variance"
  input: "BatchNorm_12/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_12/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_12/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_14/BiasAdd"
  input: "BatchNorm_12/gamma/read"
  input: "BatchNorm_12/beta/read"
  input: "BatchNorm_12/Const"
  input: "BatchNorm_12/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_12/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_12/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_12/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_12/AssignMovingAvg/sub/x"
  input: "BatchNorm_12/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_12/moving_mean/read"
  input: "BatchNorm_12/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_12/AssignMovingAvg/sub_1"
  input: "BatchNorm_12/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_12/moving_mean"
  input: "BatchNorm_12/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_12/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_12/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_12/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_12/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_12/moving_variance/read"
  input: "BatchNorm_12/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_12/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_12/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_12/moving_variance"
  input: "BatchNorm_12/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_12/Relu"
  op: "Relu"
  input: "BatchNorm_12/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_15/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_15/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_15/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_15/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_15/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_15/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_15/weights/Initializer/random_uniform/max"
  input: "conv_15/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_15/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_15/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_15/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_15/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_15/weights/Initializer/random_uniform/mul"
  input: "conv_15/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_15/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_15/weights/Assign"
  op: "Assign"
  input: "conv_15/weights"
  input: "conv_15/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_15/weights/read"
  op: "Identity"
  input: "conv_15/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_15/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_15/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_15/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_15/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_15/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_15/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_15/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_15/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_15/biases/Assign"
  op: "Assign"
  input: "conv_15/biases"
  input: "conv_15/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_15/biases/read"
  op: "Identity"
  input: "conv_15/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_15/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_15/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_12/Relu"
  input: "conv_15/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_15/BiasAdd"
  op: "BiasAdd"
  input: "conv_15/Conv2D"
  input: "conv_15/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_13/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_13/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_13/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_13/gamma"
  input: "BatchNorm_13/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_13/gamma/read"
  op: "Identity"
  input: "BatchNorm_13/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_13/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_13/beta/Assign"
  op: "Assign"
  input: "BatchNorm_13/beta"
  input: "BatchNorm_13/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_13/beta/read"
  op: "Identity"
  input: "BatchNorm_13/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_13/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_13/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_13/moving_mean"
  input: "BatchNorm_13/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_13/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_13/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_13/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_13/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_13/moving_variance"
  input: "BatchNorm_13/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_13/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_13/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_15/BiasAdd"
  input: "BatchNorm_13/gamma/read"
  input: "BatchNorm_13/beta/read"
  input: "BatchNorm_13/Const"
  input: "BatchNorm_13/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_13/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_13/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_13/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_13/AssignMovingAvg/sub/x"
  input: "BatchNorm_13/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_13/moving_mean/read"
  input: "BatchNorm_13/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_13/AssignMovingAvg/sub_1"
  input: "BatchNorm_13/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_13/moving_mean"
  input: "BatchNorm_13/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_13/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_13/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_13/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_13/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_13/moving_variance/read"
  input: "BatchNorm_13/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_13/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_13/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_13/moving_variance"
  input: "BatchNorm_13/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_13/Relu"
  op: "Relu"
  input: "BatchNorm_13/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_16/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_16/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_16/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv_16/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_16/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_16/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_16/weights/Initializer/random_uniform/max"
  input: "conv_16/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_16/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_16/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_16/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_16/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_16/weights/Initializer/random_uniform/mul"
  input: "conv_16/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_16/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_16/weights/Assign"
  op: "Assign"
  input: "conv_16/weights"
  input: "conv_16/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_16/weights/read"
  op: "Identity"
  input: "conv_16/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_16/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_16/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_16/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_16/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_16/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_16/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_16/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_16/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_16/biases/Assign"
  op: "Assign"
  input: "conv_16/biases"
  input: "conv_16/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_16/biases/read"
  op: "Identity"
  input: "conv_16/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_16/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_16/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_13/Relu"
  input: "conv_16/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_16/BiasAdd"
  op: "BiasAdd"
  input: "conv_16/Conv2D"
  input: "conv_16/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BatchNorm_14/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_14/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_14/gamma/Assign"
  op: "Assign"
  input: "BatchNorm_14/gamma"
  input: "BatchNorm_14/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_14/gamma/read"
  op: "Identity"
  input: "BatchNorm_14/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_14/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_14/beta/Assign"
  op: "Assign"
  input: "BatchNorm_14/beta"
  input: "BatchNorm_14/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_14/beta/read"
  op: "Identity"
  input: "BatchNorm_14/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_14/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_14/moving_mean/Assign"
  op: "Assign"
  input: "BatchNorm_14/moving_mean"
  input: "BatchNorm_14/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_14/moving_mean/read"
  op: "Identity"
  input: "BatchNorm_14/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_14/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_14/moving_variance/Assign"
  op: "Assign"
  input: "BatchNorm_14/moving_variance"
  input: "BatchNorm_14/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_14/moving_variance/read"
  op: "Identity"
  input: "BatchNorm_14/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_16/BiasAdd"
  input: "BatchNorm_14/gamma/read"
  input: "BatchNorm_14/beta/read"
  input: "BatchNorm_14/Const"
  input: "BatchNorm_14/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_14/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "BatchNorm_14/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_14/AssignMovingAvg/sub"
  op: "Sub"
  input: "BatchNorm_14/AssignMovingAvg/sub/x"
  input: "BatchNorm_14/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "BatchNorm_14/moving_mean/read"
  input: "BatchNorm_14/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/AssignMovingAvg/mul"
  op: "Mul"
  input: "BatchNorm_14/AssignMovingAvg/sub_1"
  input: "BatchNorm_14/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/AssignMovingAvg"
  op: "AssignSub"
  input: "BatchNorm_14/moving_mean"
  input: "BatchNorm_14/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_14/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "BatchNorm_14/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "BatchNorm_14/AssignMovingAvg_1/sub/x"
  input: "BatchNorm_14/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "BatchNorm_14/moving_variance/read"
  input: "BatchNorm_14/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "BatchNorm_14/AssignMovingAvg_1/sub_1"
  input: "BatchNorm_14/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/AssignMovingAvg_1"
  op: "AssignSub"
  input: "BatchNorm_14/moving_variance"
  input: "BatchNorm_14/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "BatchNorm_14/Relu"
  op: "Relu"
  input: "BatchNorm_14/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_17/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv_17/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09975093603134155
      }
    }
  }
}
node {
  name: "conv_17/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09975093603134155
      }
    }
  }
}
node {
  name: "conv_17/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_17/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_17/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_17/weights/Initializer/random_uniform/max"
  input: "conv_17/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_17/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_17/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_17/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "conv_17/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_17/weights/Initializer/random_uniform/mul"
  input: "conv_17/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "conv_17/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_17/weights/Assign"
  op: "Assign"
  input: "conv_17/weights"
  input: "conv_17/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_17/weights/read"
  op: "Identity"
  input: "conv_17/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "conv_17/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "conv_17/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "conv_17/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_17/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "conv_17/kernel/Regularizer/l2_regularizer/scale"
  input: "conv_17/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_17/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_17/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_17/biases/Assign"
  op: "Assign"
  input: "conv_17/biases"
  input: "conv_17/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_17/biases/read"
  op: "Identity"
  input: "conv_17/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "conv_17/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_17/Conv2D"
  op: "Conv2D"
  input: "BatchNorm_14/Relu"
  input: "conv_17/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_17/BiasAdd"
  op: "BiasAdd"
  input: "conv_17/Conv2D"
  input: "conv_17/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "cost/sub"
  op: "Sub"
  input: "conv_17/BiasAdd"
  input: "random_shuffle_queue_DequeueMany:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "cost/L2Loss"
  op: "L2Loss"
  input: "cost/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cost/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0078125
      }
    }
  }
}
node {
  name: "cost/mul"
  op: "Mul"
  input: "cost/mul/x"
  input: "cost/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cost/AddN"
  op: "AddN"
  input: "cost/mul"
  input: "conv_1/kernel/Regularizer/l2_regularizer"
  input: "conv_2/kernel/Regularizer/l2_regularizer"
  input: "conv_3/kernel/Regularizer/l2_regularizer"
  input: "conv_4/kernel/Regularizer/l2_regularizer"
  input: "conv_5/kernel/Regularizer/l2_regularizer"
  input: "conv_6/kernel/Regularizer/l2_regularizer"
  input: "conv_7/kernel/Regularizer/l2_regularizer"
  input: "conv_8/kernel/Regularizer/l2_regularizer"
  input: "conv_9/kernel/Regularizer/l2_regularizer"
  input: "conv_10/kernel/Regularizer/l2_regularizer"
  input: "conv_11/kernel/Regularizer/l2_regularizer"
  input: "conv_12/kernel/Regularizer/l2_regularizer"
  input: "conv_13/kernel/Regularizer/l2_regularizer"
  input: "conv_14/kernel/Regularizer/l2_regularizer"
  input: "conv_15/kernel/Regularizer/l2_regularizer"
  input: "conv_16/kernel/Regularizer/l2_regularizer"
  input: "conv_17/kernel/Regularizer/l2_regularizer"
  attr {
    key: "N"
    value {
      i: 18
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cost/cost/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "cost/cost"
      }
    }
  }
}
node {
  name: "cost/cost"
  op: "ScalarSummary"
  input: "cost/cost/tags"
  input: "cost/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_image/input_image/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input_image/input_image"
      }
    }
  }
}
node {
  name: "input_image/input_image"
  op: "ImageSummary"
  input: "input_image/input_image/tag"
  input: "random_shuffle_queue_DequeueMany"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "noisy/noisy/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "noisy/noisy"
      }
    }
  }
}
node {
  name: "noisy/noisy"
  op: "ImageSummary"
  input: "noisy/noisy/tag"
  input: "conv_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "clear/sub"
  op: "Sub"
  input: "random_shuffle_queue_DequeueMany"
  input: "conv_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "clear/clear/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "clear/clear"
      }
    }
  }
}
node {
  name: "clear/clear"
  op: "ImageSummary"
  input: "clear/clear/tag"
  input: "clear/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "learning_rate/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "ScalarSummary"
  input: "learning_rate/tags"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/Fill"
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_7"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_8"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_9"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_10"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_11"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_12"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_13"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_14"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_15"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_16"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/AddN_grad/tuple/control_dependency_17"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/cost/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/mul_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency"
  input: "cost/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency"
  input: "cost/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/cost/mul_grad/Mul"
  input: "^gradients/cost/mul_grad/Mul_1"
}
node {
  name: "gradients/cost/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/cost/mul_grad/Mul"
  input: "^gradients/cost/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cost/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/cost/mul_grad/Mul_1"
  input: "^gradients/cost/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cost/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_1"
  input: "conv_1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_1"
  input: "conv_1/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_2"
  input: "conv_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_2"
  input: "conv_2/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_3"
  input: "conv_3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_3"
  input: "conv_3/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_4"
  input: "conv_4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_4"
  input: "conv_4/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_5"
  input: "conv_5/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_5"
  input: "conv_5/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_6"
  input: "conv_6/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_6"
  input: "conv_6/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_7"
  input: "conv_7/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_7"
  input: "conv_7/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_8"
  input: "conv_8/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_8"
  input: "conv_8/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_9"
  input: "conv_9/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_9"
  input: "conv_9/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_10"
  input: "conv_10/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_10"
  input: "conv_10/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_11"
  input: "conv_11/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_11"
  input: "conv_11/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_12"
  input: "conv_12/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_12"
  input: "conv_12/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_13"
  input: "conv_13/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_13"
  input: "conv_13/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_14"
  input: "conv_14/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_14"
  input: "conv_14/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_15"
  input: "conv_15/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_15"
  input: "conv_15/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_16"
  input: "conv_16/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_16"
  input: "conv_16/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_17"
  input: "conv_17/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/cost/AddN_grad/tuple/control_dependency_17"
  input: "conv_17/kernel/Regularizer/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/cost/L2Loss_grad/mul"
  op: "Mul"
  input: "cost/sub"
  input: "gradients/cost/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_1/weights/read"
  input: "gradients/conv_1/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_2/weights/read"
  input: "gradients/conv_2/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_3/weights/read"
  input: "gradients/conv_3/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_4/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_4/weights/read"
  input: "gradients/conv_4/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_5/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_5/weights/read"
  input: "gradients/conv_5/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_6/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_6/weights/read"
  input: "gradients/conv_6/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_7/weights/read"
  input: "gradients/conv_7/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_8/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_8/weights/read"
  input: "gradients/conv_8/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_9/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_9/weights/read"
  input: "gradients/conv_9/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_10/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_10/weights/read"
  input: "gradients/conv_10/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_11/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_11/weights/read"
  input: "gradients/conv_11/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_12/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_12/weights/read"
  input: "gradients/conv_12/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_13/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_13/weights/read"
  input: "gradients/conv_13/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_14/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_14/weights/read"
  input: "gradients/conv_14/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_15/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_15/weights/read"
  input: "gradients/conv_15/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_16/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_16/weights/read"
  input: "gradients/conv_16/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_17/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "conv_17/weights/read"
  input: "gradients/conv_17/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cost/sub_grad/Neg"
  op: "Neg"
  input: "gradients/cost/L2Loss_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cost/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/cost/L2Loss_grad/mul"
  input: "^gradients/cost/sub_grad/Neg"
}
node {
  name: "gradients/cost/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/cost/L2Loss_grad/mul"
  input: "^gradients/cost/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cost/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cost/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/cost/sub_grad/Neg"
  input: "^gradients/cost/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cost/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_17/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/cost/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_17/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_17/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/cost/sub_grad/tuple/control_dependency"
}
node {
  name: "gradients/conv_17/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/cost/sub_grad/tuple/control_dependency"
  input: "^gradients/conv_17/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cost/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_17/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_17/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_17/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_17/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_17/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_14/Relu"
  input: "conv_17/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_17/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_17/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_17/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_17/Conv2D_grad/Const"
  input: "conv_17/weights/read"
  input: "gradients/conv_17/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_17/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_14/Relu"
  input: "gradients/conv_17/Conv2D_grad/Const_1"
  input: "gradients/conv_17/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_17/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_17/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_17/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_17/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_17/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_17/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_17/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_17/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_17/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_17/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_17/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_14/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_17/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_14/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/conv_17/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_17/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_17/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "BatchNorm_14/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "BatchNorm_14/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "BatchNorm_14/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "BatchNorm_14/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_14/Relu_grad/ReluGrad"
  input: "conv_16/BiasAdd"
  input: "BatchNorm_14/gamma/read"
  input: "BatchNorm_14/FusedBatchNorm:3"
  input: "BatchNorm_14/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_16/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_16/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_16/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_16/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_16/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_16/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_16/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_16/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_16/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_16/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_13/Relu"
  input: "conv_16/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_16/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_16/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_16/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_16/Conv2D_grad/Const"
  input: "conv_16/weights/read"
  input: "gradients/conv_16/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_16/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_13/Relu"
  input: "gradients/conv_16/Conv2D_grad/Const_1"
  input: "gradients/conv_16/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_16/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_16/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_16/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_16/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_16/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_16/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_16/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_16/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_16/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_16/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_16/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_13/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_16/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_13/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/conv_16/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_16/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_16/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "BatchNorm_13/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "BatchNorm_13/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "BatchNorm_13/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "BatchNorm_13/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_13/Relu_grad/ReluGrad"
  input: "conv_15/BiasAdd"
  input: "BatchNorm_13/gamma/read"
  input: "BatchNorm_13/FusedBatchNorm:3"
  input: "BatchNorm_13/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_15/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_15/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_15/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_15/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_15/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_15/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_15/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_15/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_15/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_15/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_12/Relu"
  input: "conv_15/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_15/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_15/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_15/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_15/Conv2D_grad/Const"
  input: "conv_15/weights/read"
  input: "gradients/conv_15/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_15/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_12/Relu"
  input: "gradients/conv_15/Conv2D_grad/Const_1"
  input: "gradients/conv_15/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_15/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_15/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_15/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_15/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_15/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_15/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_15/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_15/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_15/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_15/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_15/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_12/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_15/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_12/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/conv_15/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_15/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_15/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_8"
  op: "ZerosLike"
  input: "BatchNorm_12/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_9"
  op: "ZerosLike"
  input: "BatchNorm_12/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_10"
  op: "ZerosLike"
  input: "BatchNorm_12/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_11"
  op: "ZerosLike"
  input: "BatchNorm_12/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_12/Relu_grad/ReluGrad"
  input: "conv_14/BiasAdd"
  input: "BatchNorm_12/gamma/read"
  input: "BatchNorm_12/FusedBatchNorm:3"
  input: "BatchNorm_12/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_14/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_14/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_14/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_14/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_14/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_14/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_14/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_14/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_14/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_14/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_11/Relu"
  input: "conv_14/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_14/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_14/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_14/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_14/Conv2D_grad/Const"
  input: "conv_14/weights/read"
  input: "gradients/conv_14/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_14/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_11/Relu"
  input: "gradients/conv_14/Conv2D_grad/Const_1"
  input: "gradients/conv_14/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_14/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_14/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_14/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_14/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_14/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_14/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_14/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_14/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_14/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_14/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_14/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_11/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_14/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_11/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/conv_14/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_14/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_14/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_12"
  op: "ZerosLike"
  input: "BatchNorm_11/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_13"
  op: "ZerosLike"
  input: "BatchNorm_11/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_14"
  op: "ZerosLike"
  input: "BatchNorm_11/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_15"
  op: "ZerosLike"
  input: "BatchNorm_11/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_11/Relu_grad/ReluGrad"
  input: "conv_13/BiasAdd"
  input: "BatchNorm_11/gamma/read"
  input: "BatchNorm_11/FusedBatchNorm:3"
  input: "BatchNorm_11/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_13/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_13/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_13/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_13/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_13/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_13/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_13/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_13/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_13/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_13/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_10/Relu"
  input: "conv_13/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_13/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_13/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_13/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_13/Conv2D_grad/Const"
  input: "conv_13/weights/read"
  input: "gradients/conv_13/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_13/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_10/Relu"
  input: "gradients/conv_13/Conv2D_grad/Const_1"
  input: "gradients/conv_13/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_13/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_13/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_13/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_13/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_13/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_13/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_13/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_13/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_13/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_13/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_13/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_10/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_13/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_10/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/conv_13/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_13/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_13/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_16"
  op: "ZerosLike"
  input: "BatchNorm_10/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_17"
  op: "ZerosLike"
  input: "BatchNorm_10/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_18"
  op: "ZerosLike"
  input: "BatchNorm_10/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_19"
  op: "ZerosLike"
  input: "BatchNorm_10/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_10/Relu_grad/ReluGrad"
  input: "conv_12/BiasAdd"
  input: "BatchNorm_10/gamma/read"
  input: "BatchNorm_10/FusedBatchNorm:3"
  input: "BatchNorm_10/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_12/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_12/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_12/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_12/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_12/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_12/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_12/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_12/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_12/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_12/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_9/Relu"
  input: "conv_12/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_12/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_12/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_12/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_12/Conv2D_grad/Const"
  input: "conv_12/weights/read"
  input: "gradients/conv_12/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_12/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_9/Relu"
  input: "gradients/conv_12/Conv2D_grad/Const_1"
  input: "gradients/conv_12/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_12/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_12/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_12/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_12/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_12/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_12/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_12/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_12/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_12/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_12/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_12/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_9/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_12/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_9/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/conv_12/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_12/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_12/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_20"
  op: "ZerosLike"
  input: "BatchNorm_9/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_21"
  op: "ZerosLike"
  input: "BatchNorm_9/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_22"
  op: "ZerosLike"
  input: "BatchNorm_9/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_23"
  op: "ZerosLike"
  input: "BatchNorm_9/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_9/Relu_grad/ReluGrad"
  input: "conv_11/BiasAdd"
  input: "BatchNorm_9/gamma/read"
  input: "BatchNorm_9/FusedBatchNorm:3"
  input: "BatchNorm_9/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_11/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_11/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_11/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_11/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_11/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_11/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_11/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_11/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_11/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_11/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_8/Relu"
  input: "conv_11/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_11/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_11/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_11/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_11/Conv2D_grad/Const"
  input: "conv_11/weights/read"
  input: "gradients/conv_11/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_11/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_8/Relu"
  input: "gradients/conv_11/Conv2D_grad/Const_1"
  input: "gradients/conv_11/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_11/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_11/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_11/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_11/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_11/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_11/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_11/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_11/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_11/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_11/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_11/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_8/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_11/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_8/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/conv_11/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_11/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_11/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_24"
  op: "ZerosLike"
  input: "BatchNorm_8/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_25"
  op: "ZerosLike"
  input: "BatchNorm_8/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_26"
  op: "ZerosLike"
  input: "BatchNorm_8/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_27"
  op: "ZerosLike"
  input: "BatchNorm_8/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_8/Relu_grad/ReluGrad"
  input: "conv_10/BiasAdd"
  input: "BatchNorm_8/gamma/read"
  input: "BatchNorm_8/FusedBatchNorm:3"
  input: "BatchNorm_8/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_10/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_10/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_10/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_10/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_10/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_10/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_10/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_10/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_10/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_10/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_7/Relu"
  input: "conv_10/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_10/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_10/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_10/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_10/Conv2D_grad/Const"
  input: "conv_10/weights/read"
  input: "gradients/conv_10/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_10/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_7/Relu"
  input: "gradients/conv_10/Conv2D_grad/Const_1"
  input: "gradients/conv_10/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_10/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_10/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_10/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_10/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_10/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_10/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_10/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_10/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_10/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_10/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_10/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_10/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/conv_10/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_10/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_10/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_28"
  op: "ZerosLike"
  input: "BatchNorm_7/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_29"
  op: "ZerosLike"
  input: "BatchNorm_7/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_30"
  op: "ZerosLike"
  input: "BatchNorm_7/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_31"
  op: "ZerosLike"
  input: "BatchNorm_7/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_7/Relu_grad/ReluGrad"
  input: "conv_9/BiasAdd"
  input: "BatchNorm_7/gamma/read"
  input: "BatchNorm_7/FusedBatchNorm:3"
  input: "BatchNorm_7/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_9/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_9/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_9/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_9/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_9/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_9/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_9/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_9/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_9/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_9/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_6/Relu"
  input: "conv_9/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_9/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_9/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_9/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_9/Conv2D_grad/Const"
  input: "conv_9/weights/read"
  input: "gradients/conv_9/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_9/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_6/Relu"
  input: "gradients/conv_9/Conv2D_grad/Const_1"
  input: "gradients/conv_9/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_9/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_9/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_9/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_9/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_9/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_9/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_9/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_9/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_9/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_9/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_9/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_9/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/conv_9/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_9/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_9/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_32"
  op: "ZerosLike"
  input: "BatchNorm_6/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_33"
  op: "ZerosLike"
  input: "BatchNorm_6/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_34"
  op: "ZerosLike"
  input: "BatchNorm_6/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_35"
  op: "ZerosLike"
  input: "BatchNorm_6/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_6/Relu_grad/ReluGrad"
  input: "conv_8/BiasAdd"
  input: "BatchNorm_6/gamma/read"
  input: "BatchNorm_6/FusedBatchNorm:3"
  input: "BatchNorm_6/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_8/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_8/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_8/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_8/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_8/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_8/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_8/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_8/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_8/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_8/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_5/Relu"
  input: "conv_8/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_8/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_8/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_8/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_8/Conv2D_grad/Const"
  input: "conv_8/weights/read"
  input: "gradients/conv_8/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_8/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_5/Relu"
  input: "gradients/conv_8/Conv2D_grad/Const_1"
  input: "gradients/conv_8/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_8/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_8/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_8/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_8/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_8/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_8/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_8/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_8/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_8/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_8/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_8/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_8/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/conv_8/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_8/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_8/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_36"
  op: "ZerosLike"
  input: "BatchNorm_5/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_37"
  op: "ZerosLike"
  input: "BatchNorm_5/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_38"
  op: "ZerosLike"
  input: "BatchNorm_5/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_39"
  op: "ZerosLike"
  input: "BatchNorm_5/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_5/Relu_grad/ReluGrad"
  input: "conv_7/BiasAdd"
  input: "BatchNorm_5/gamma/read"
  input: "BatchNorm_5/FusedBatchNorm:3"
  input: "BatchNorm_5/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_7/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_7/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_7/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_7/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_7/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_7/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_7/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_4/Relu"
  input: "conv_7/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_7/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_7/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_7/Conv2D_grad/Const"
  input: "conv_7/weights/read"
  input: "gradients/conv_7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_4/Relu"
  input: "gradients/conv_7/Conv2D_grad/Const_1"
  input: "gradients/conv_7/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_7/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_7/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_7/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/conv_7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_7/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_7/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_40"
  op: "ZerosLike"
  input: "BatchNorm_4/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_41"
  op: "ZerosLike"
  input: "BatchNorm_4/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_42"
  op: "ZerosLike"
  input: "BatchNorm_4/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_43"
  op: "ZerosLike"
  input: "BatchNorm_4/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_4/Relu_grad/ReluGrad"
  input: "conv_6/BiasAdd"
  input: "BatchNorm_4/gamma/read"
  input: "BatchNorm_4/FusedBatchNorm:3"
  input: "BatchNorm_4/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_6/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_6/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_6/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_6/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_6/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_6/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_6/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_3/Relu"
  input: "conv_6/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_6/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_6/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_6/Conv2D_grad/Const"
  input: "conv_6/weights/read"
  input: "gradients/conv_6/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_3/Relu"
  input: "gradients/conv_6/Conv2D_grad/Const_1"
  input: "gradients/conv_6/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_6/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_6/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_6/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_6/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_6/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_6/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_6/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/conv_6/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_6/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_6/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_44"
  op: "ZerosLike"
  input: "BatchNorm_3/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_45"
  op: "ZerosLike"
  input: "BatchNorm_3/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_46"
  op: "ZerosLike"
  input: "BatchNorm_3/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_47"
  op: "ZerosLike"
  input: "BatchNorm_3/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_3/Relu_grad/ReluGrad"
  input: "conv_5/BiasAdd"
  input: "BatchNorm_3/gamma/read"
  input: "BatchNorm_3/FusedBatchNorm:3"
  input: "BatchNorm_3/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_5/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_5/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_5/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_5/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_5/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_5/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_2/Relu"
  input: "conv_5/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_5/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_5/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_5/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_5/Conv2D_grad/Const"
  input: "conv_5/weights/read"
  input: "gradients/conv_5/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_5/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_2/Relu"
  input: "gradients/conv_5/Conv2D_grad/Const_1"
  input: "gradients/conv_5/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_5/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_5/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_5/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_5/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_5/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_5/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_5/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/conv_5/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_5/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_5/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_48"
  op: "ZerosLike"
  input: "BatchNorm_2/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_49"
  op: "ZerosLike"
  input: "BatchNorm_2/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_50"
  op: "ZerosLike"
  input: "BatchNorm_2/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_51"
  op: "ZerosLike"
  input: "BatchNorm_2/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_2/Relu_grad/ReluGrad"
  input: "conv_4/BiasAdd"
  input: "BatchNorm_2/gamma/read"
  input: "BatchNorm_2/FusedBatchNorm:3"
  input: "BatchNorm_2/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_4/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_4/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm_1/Relu"
  input: "conv_4/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_4/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_4/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_4/Conv2D_grad/Const"
  input: "conv_4/weights/read"
  input: "gradients/conv_4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm_1/Relu"
  input: "gradients/conv_4/Conv2D_grad/Const_1"
  input: "gradients/conv_4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_4/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_4/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/conv_4/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_4/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_4/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_52"
  op: "ZerosLike"
  input: "BatchNorm_1/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_53"
  op: "ZerosLike"
  input: "BatchNorm_1/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_54"
  op: "ZerosLike"
  input: "BatchNorm_1/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_55"
  op: "ZerosLike"
  input: "BatchNorm_1/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm_1/Relu_grad/ReluGrad"
  input: "conv_3/BiasAdd"
  input: "BatchNorm_1/gamma/read"
  input: "BatchNorm_1/FusedBatchNorm:3"
  input: "BatchNorm_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_3/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_3/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "BatchNorm/Relu"
  input: "conv_3/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_3/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_3/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_3/Conv2D_grad/Const"
  input: "conv_3/weights/read"
  input: "gradients/conv_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "BatchNorm/Relu"
  input: "gradients/conv_3/Conv2D_grad/Const_1"
  input: "gradients/conv_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_3/Conv2D_grad/tuple/control_dependency"
  input: "BatchNorm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/conv_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_3/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_56"
  op: "ZerosLike"
  input: "BatchNorm/FusedBatchNorm:1"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_57"
  op: "ZerosLike"
  input: "BatchNorm/FusedBatchNorm:2"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_58"
  op: "ZerosLike"
  input: "BatchNorm/FusedBatchNorm:3"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_59"
  op: "ZerosLike"
  input: "BatchNorm/FusedBatchNorm:4"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/BatchNorm/Relu_grad/ReluGrad"
  input: "conv_2/BiasAdd"
  input: "BatchNorm/gamma/read"
  input: "BatchNorm/FusedBatchNorm:3"
  input: "BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/conv_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^gradients/conv_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv_1/Relu"
  input: "conv_2/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_2/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_2/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_2/Conv2D_grad/Const"
  input: "conv_2/weights/read"
  input: "gradients/conv_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv_1/Relu"
  input: "gradients/conv_2/Conv2D_grad/Const_1"
  input: "gradients/conv_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv_2/Conv2D_grad/tuple/control_dependency"
  input: "conv_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/conv_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_2/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/conv_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/conv_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_1/Relu_grad/ReluGrad"
  input: "^gradients/conv_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "random_shuffle_queue_DequeueMany"
  input: "conv_1/weights/read"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv_1/Conv2D_grad/Const"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_1/Conv2D_grad/Const_1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv_1/Conv2D_grad/Const"
  input: "conv_1/weights/read"
  input: "gradients/conv_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "random_shuffle_queue_DequeueMany"
  input: "gradients/conv_1/Conv2D_grad/Const_1"
  input: "gradients/conv_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  input: "^gradients/conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/conv_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv_1/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "conv_1/weights/Adam"
  input: "conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_1/weights/Adam/read"
  op: "Identity"
  input: "conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_1/weights/Adam_1"
  input: "conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_1/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_1/biases/Adam/Assign"
  op: "Assign"
  input: "conv_1/biases/Adam"
  input: "conv_1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_1/biases/Adam/read"
  op: "Identity"
  input: "conv_1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_1/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_1/biases/Adam_1"
  input: "conv_1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_1/biases/Adam_1/read"
  op: "Identity"
  input: "conv_1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_2/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_2/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_2/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_2/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_2/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_2/weights/Adam/Assign"
  op: "Assign"
  input: "conv_2/weights/Adam"
  input: "conv_2/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_2/weights/Adam/read"
  op: "Identity"
  input: "conv_2/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_2/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_2/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_2/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_2/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_2/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_2/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_2/weights/Adam_1"
  input: "conv_2/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_2/weights/Adam_1/read"
  op: "Identity"
  input: "conv_2/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_2/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_2/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_2/biases/Adam/Assign"
  op: "Assign"
  input: "conv_2/biases/Adam"
  input: "conv_2/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_2/biases/Adam/read"
  op: "Identity"
  input: "conv_2/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_2/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_2/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_2/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_2/biases/Adam_1"
  input: "conv_2/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_2/biases/Adam_1/read"
  op: "Identity"
  input: "conv_2/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm/gamma/Adam"
  input: "BatchNorm/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm/gamma/Adam_1"
  input: "BatchNorm/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm/beta/Adam"
  input: "BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm/beta/Adam_1"
  input: "BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_3/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_3/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_3/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_3/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_3/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_3/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_3/weights/Adam/Assign"
  op: "Assign"
  input: "conv_3/weights/Adam"
  input: "conv_3/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_3/weights/Adam/read"
  op: "Identity"
  input: "conv_3/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_3/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_3/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_3/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_3/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_3/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_3/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_3/weights/Adam_1"
  input: "conv_3/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_3/weights/Adam_1/read"
  op: "Identity"
  input: "conv_3/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_3/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_3/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_3/biases/Adam/Assign"
  op: "Assign"
  input: "conv_3/biases/Adam"
  input: "conv_3/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_3/biases/Adam/read"
  op: "Identity"
  input: "conv_3/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_3/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_3/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_3/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_3/biases/Adam_1"
  input: "conv_3/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_3/biases/Adam_1/read"
  op: "Identity"
  input: "conv_3/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_1/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_1/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_1/gamma/Adam"
  input: "BatchNorm_1/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_1/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_1/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_1/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_1/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_1/gamma/Adam_1"
  input: "BatchNorm_1/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_1/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_1/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_1/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_1/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_1/beta/Adam"
  input: "BatchNorm_1/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_1/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_1/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_1/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_1/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_1/beta/Adam_1"
  input: "BatchNorm_1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_1/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_1/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_4/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_4/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_4/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_4/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_4/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_4/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_4/weights/Adam/Assign"
  op: "Assign"
  input: "conv_4/weights/Adam"
  input: "conv_4/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_4/weights/Adam/read"
  op: "Identity"
  input: "conv_4/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_4/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_4/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_4/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_4/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_4/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_4/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_4/weights/Adam_1"
  input: "conv_4/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_4/weights/Adam_1/read"
  op: "Identity"
  input: "conv_4/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_4/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_4/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_4/biases/Adam/Assign"
  op: "Assign"
  input: "conv_4/biases/Adam"
  input: "conv_4/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_4/biases/Adam/read"
  op: "Identity"
  input: "conv_4/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_4/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_4/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_4/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_4/biases/Adam_1"
  input: "conv_4/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_4/biases/Adam_1/read"
  op: "Identity"
  input: "conv_4/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_2/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_2/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_2/gamma/Adam"
  input: "BatchNorm_2/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_2/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_2/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_2/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_2/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_2/gamma/Adam_1"
  input: "BatchNorm_2/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_2/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_2/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_2/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_2/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_2/beta/Adam"
  input: "BatchNorm_2/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_2/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_2/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_2/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_2/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_2/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_2/beta/Adam_1"
  input: "BatchNorm_2/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_2/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_2/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_5/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_5/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_5/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_5/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_5/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_5/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_5/weights/Adam/Assign"
  op: "Assign"
  input: "conv_5/weights/Adam"
  input: "conv_5/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_5/weights/Adam/read"
  op: "Identity"
  input: "conv_5/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_5/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_5/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_5/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_5/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_5/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_5/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_5/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_5/weights/Adam_1"
  input: "conv_5/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_5/weights/Adam_1/read"
  op: "Identity"
  input: "conv_5/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_5/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_5/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_5/biases/Adam/Assign"
  op: "Assign"
  input: "conv_5/biases/Adam"
  input: "conv_5/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_5/biases/Adam/read"
  op: "Identity"
  input: "conv_5/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_5/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_5/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_5/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_5/biases/Adam_1"
  input: "conv_5/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_5/biases/Adam_1/read"
  op: "Identity"
  input: "conv_5/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_3/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_3/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_3/gamma/Adam"
  input: "BatchNorm_3/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_3/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_3/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_3/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_3/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_3/gamma/Adam_1"
  input: "BatchNorm_3/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_3/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_3/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_3/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_3/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_3/beta/Adam"
  input: "BatchNorm_3/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_3/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_3/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_3/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_3/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_3/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_3/beta/Adam_1"
  input: "BatchNorm_3/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_3/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_3/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_6/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_6/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_6/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_6/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_6/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_6/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_6/weights/Adam/Assign"
  op: "Assign"
  input: "conv_6/weights/Adam"
  input: "conv_6/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_6/weights/Adam/read"
  op: "Identity"
  input: "conv_6/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_6/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_6/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_6/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_6/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_6/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_6/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_6/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_6/weights/Adam_1"
  input: "conv_6/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_6/weights/Adam_1/read"
  op: "Identity"
  input: "conv_6/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_6/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_6/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_6/biases/Adam/Assign"
  op: "Assign"
  input: "conv_6/biases/Adam"
  input: "conv_6/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_6/biases/Adam/read"
  op: "Identity"
  input: "conv_6/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_6/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_6/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_6/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_6/biases/Adam_1"
  input: "conv_6/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_6/biases/Adam_1/read"
  op: "Identity"
  input: "conv_6/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_4/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_4/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_4/gamma/Adam"
  input: "BatchNorm_4/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_4/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_4/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_4/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_4/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_4/gamma/Adam_1"
  input: "BatchNorm_4/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_4/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_4/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_4/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_4/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_4/beta/Adam"
  input: "BatchNorm_4/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_4/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_4/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_4/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_4/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_4/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_4/beta/Adam_1"
  input: "BatchNorm_4/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_4/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_4/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_7/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_7/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_7/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_7/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_7/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_7/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_7/weights/Adam/Assign"
  op: "Assign"
  input: "conv_7/weights/Adam"
  input: "conv_7/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_7/weights/Adam/read"
  op: "Identity"
  input: "conv_7/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_7/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_7/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_7/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_7/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_7/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_7/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_7/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_7/weights/Adam_1"
  input: "conv_7/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_7/weights/Adam_1/read"
  op: "Identity"
  input: "conv_7/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_7/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_7/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_7/biases/Adam/Assign"
  op: "Assign"
  input: "conv_7/biases/Adam"
  input: "conv_7/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_7/biases/Adam/read"
  op: "Identity"
  input: "conv_7/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_7/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_7/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_7/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_7/biases/Adam_1"
  input: "conv_7/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_7/biases/Adam_1/read"
  op: "Identity"
  input: "conv_7/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_5/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_5/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_5/gamma/Adam"
  input: "BatchNorm_5/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_5/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_5/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_5/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_5/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_5/gamma/Adam_1"
  input: "BatchNorm_5/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_5/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_5/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_5/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_5/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_5/beta/Adam"
  input: "BatchNorm_5/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_5/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_5/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_5/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_5/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_5/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_5/beta/Adam_1"
  input: "BatchNorm_5/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_5/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_5/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_8/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_8/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_8/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_8/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_8/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_8/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_8/weights/Adam/Assign"
  op: "Assign"
  input: "conv_8/weights/Adam"
  input: "conv_8/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_8/weights/Adam/read"
  op: "Identity"
  input: "conv_8/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_8/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_8/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_8/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_8/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_8/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_8/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_8/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_8/weights/Adam_1"
  input: "conv_8/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_8/weights/Adam_1/read"
  op: "Identity"
  input: "conv_8/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_8/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_8/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_8/biases/Adam/Assign"
  op: "Assign"
  input: "conv_8/biases/Adam"
  input: "conv_8/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_8/biases/Adam/read"
  op: "Identity"
  input: "conv_8/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_8/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_8/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_8/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_8/biases/Adam_1"
  input: "conv_8/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_8/biases/Adam_1/read"
  op: "Identity"
  input: "conv_8/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_6/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_6/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_6/gamma/Adam"
  input: "BatchNorm_6/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_6/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_6/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_6/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_6/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_6/gamma/Adam_1"
  input: "BatchNorm_6/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_6/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_6/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_6/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_6/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_6/beta/Adam"
  input: "BatchNorm_6/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_6/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_6/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_6/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_6/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_6/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_6/beta/Adam_1"
  input: "BatchNorm_6/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_6/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_6/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_9/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_9/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_9/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_9/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_9/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_9/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_9/weights/Adam/Assign"
  op: "Assign"
  input: "conv_9/weights/Adam"
  input: "conv_9/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_9/weights/Adam/read"
  op: "Identity"
  input: "conv_9/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_9/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_9/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_9/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_9/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_9/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_9/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_9/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_9/weights/Adam_1"
  input: "conv_9/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_9/weights/Adam_1/read"
  op: "Identity"
  input: "conv_9/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_9/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_9/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_9/biases/Adam/Assign"
  op: "Assign"
  input: "conv_9/biases/Adam"
  input: "conv_9/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_9/biases/Adam/read"
  op: "Identity"
  input: "conv_9/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_9/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_9/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_9/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_9/biases/Adam_1"
  input: "conv_9/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_9/biases/Adam_1/read"
  op: "Identity"
  input: "conv_9/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_7/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_7/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_7/gamma/Adam"
  input: "BatchNorm_7/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_7/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_7/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_7/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_7/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_7/gamma/Adam_1"
  input: "BatchNorm_7/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_7/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_7/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_7/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_7/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_7/beta/Adam"
  input: "BatchNorm_7/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_7/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_7/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_7/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_7/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_7/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_7/beta/Adam_1"
  input: "BatchNorm_7/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_7/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_7/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_10/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_10/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_10/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_10/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_10/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_10/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_10/weights/Adam/Assign"
  op: "Assign"
  input: "conv_10/weights/Adam"
  input: "conv_10/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_10/weights/Adam/read"
  op: "Identity"
  input: "conv_10/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_10/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_10/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_10/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_10/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_10/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_10/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_10/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_10/weights/Adam_1"
  input: "conv_10/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_10/weights/Adam_1/read"
  op: "Identity"
  input: "conv_10/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_10/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_10/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_10/biases/Adam/Assign"
  op: "Assign"
  input: "conv_10/biases/Adam"
  input: "conv_10/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_10/biases/Adam/read"
  op: "Identity"
  input: "conv_10/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_10/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_10/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_10/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_10/biases/Adam_1"
  input: "conv_10/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_10/biases/Adam_1/read"
  op: "Identity"
  input: "conv_10/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_8/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_8/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_8/gamma/Adam"
  input: "BatchNorm_8/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_8/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_8/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_8/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_8/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_8/gamma/Adam_1"
  input: "BatchNorm_8/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_8/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_8/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_8/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_8/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_8/beta/Adam"
  input: "BatchNorm_8/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_8/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_8/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_8/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_8/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_8/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_8/beta/Adam_1"
  input: "BatchNorm_8/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_8/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_8/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_11/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_11/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_11/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_11/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_11/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_11/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_11/weights/Adam/Assign"
  op: "Assign"
  input: "conv_11/weights/Adam"
  input: "conv_11/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_11/weights/Adam/read"
  op: "Identity"
  input: "conv_11/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_11/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_11/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_11/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_11/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_11/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_11/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_11/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_11/weights/Adam_1"
  input: "conv_11/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_11/weights/Adam_1/read"
  op: "Identity"
  input: "conv_11/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_11/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_11/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_11/biases/Adam/Assign"
  op: "Assign"
  input: "conv_11/biases/Adam"
  input: "conv_11/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_11/biases/Adam/read"
  op: "Identity"
  input: "conv_11/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_11/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_11/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_11/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_11/biases/Adam_1"
  input: "conv_11/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_11/biases/Adam_1/read"
  op: "Identity"
  input: "conv_11/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_9/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_9/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_9/gamma/Adam"
  input: "BatchNorm_9/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_9/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_9/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_9/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_9/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_9/gamma/Adam_1"
  input: "BatchNorm_9/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_9/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_9/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_9/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_9/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_9/beta/Adam"
  input: "BatchNorm_9/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_9/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_9/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_9/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_9/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_9/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_9/beta/Adam_1"
  input: "BatchNorm_9/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_9/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_9/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_12/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_12/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_12/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_12/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_12/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_12/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_12/weights/Adam/Assign"
  op: "Assign"
  input: "conv_12/weights/Adam"
  input: "conv_12/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_12/weights/Adam/read"
  op: "Identity"
  input: "conv_12/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_12/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_12/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_12/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_12/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_12/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_12/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_12/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_12/weights/Adam_1"
  input: "conv_12/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_12/weights/Adam_1/read"
  op: "Identity"
  input: "conv_12/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_12/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_12/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_12/biases/Adam/Assign"
  op: "Assign"
  input: "conv_12/biases/Adam"
  input: "conv_12/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_12/biases/Adam/read"
  op: "Identity"
  input: "conv_12/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_12/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_12/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_12/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_12/biases/Adam_1"
  input: "conv_12/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_12/biases/Adam_1/read"
  op: "Identity"
  input: "conv_12/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_10/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_10/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_10/gamma/Adam"
  input: "BatchNorm_10/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_10/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_10/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_10/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_10/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_10/gamma/Adam_1"
  input: "BatchNorm_10/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_10/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_10/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_10/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_10/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_10/beta/Adam"
  input: "BatchNorm_10/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_10/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_10/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_10/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_10/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_10/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_10/beta/Adam_1"
  input: "BatchNorm_10/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_10/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_10/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_13/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_13/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_13/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_13/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_13/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_13/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_13/weights/Adam/Assign"
  op: "Assign"
  input: "conv_13/weights/Adam"
  input: "conv_13/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_13/weights/Adam/read"
  op: "Identity"
  input: "conv_13/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_13/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_13/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_13/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_13/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_13/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_13/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_13/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_13/weights/Adam_1"
  input: "conv_13/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_13/weights/Adam_1/read"
  op: "Identity"
  input: "conv_13/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_13/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_13/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_13/biases/Adam/Assign"
  op: "Assign"
  input: "conv_13/biases/Adam"
  input: "conv_13/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_13/biases/Adam/read"
  op: "Identity"
  input: "conv_13/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_13/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_13/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_13/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_13/biases/Adam_1"
  input: "conv_13/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_13/biases/Adam_1/read"
  op: "Identity"
  input: "conv_13/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_11/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_11/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_11/gamma/Adam"
  input: "BatchNorm_11/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_11/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_11/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_11/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_11/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_11/gamma/Adam_1"
  input: "BatchNorm_11/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_11/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_11/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_11/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_11/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_11/beta/Adam"
  input: "BatchNorm_11/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_11/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_11/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_11/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_11/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_11/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_11/beta/Adam_1"
  input: "BatchNorm_11/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_11/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_11/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_14/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_14/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_14/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_14/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_14/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_14/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_14/weights/Adam/Assign"
  op: "Assign"
  input: "conv_14/weights/Adam"
  input: "conv_14/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_14/weights/Adam/read"
  op: "Identity"
  input: "conv_14/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_14/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_14/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_14/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_14/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_14/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_14/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_14/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_14/weights/Adam_1"
  input: "conv_14/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_14/weights/Adam_1/read"
  op: "Identity"
  input: "conv_14/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_14/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_14/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_14/biases/Adam/Assign"
  op: "Assign"
  input: "conv_14/biases/Adam"
  input: "conv_14/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_14/biases/Adam/read"
  op: "Identity"
  input: "conv_14/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_14/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_14/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_14/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_14/biases/Adam_1"
  input: "conv_14/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_14/biases/Adam_1/read"
  op: "Identity"
  input: "conv_14/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_12/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_12/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_12/gamma/Adam"
  input: "BatchNorm_12/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_12/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_12/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_12/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_12/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_12/gamma/Adam_1"
  input: "BatchNorm_12/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_12/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_12/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_12/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_12/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_12/beta/Adam"
  input: "BatchNorm_12/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_12/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_12/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_12/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_12/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_12/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_12/beta/Adam_1"
  input: "BatchNorm_12/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_12/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_12/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_15/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_15/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_15/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_15/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_15/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_15/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_15/weights/Adam/Assign"
  op: "Assign"
  input: "conv_15/weights/Adam"
  input: "conv_15/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_15/weights/Adam/read"
  op: "Identity"
  input: "conv_15/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_15/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_15/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_15/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_15/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_15/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_15/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_15/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_15/weights/Adam_1"
  input: "conv_15/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_15/weights/Adam_1/read"
  op: "Identity"
  input: "conv_15/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_15/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_15/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_15/biases/Adam/Assign"
  op: "Assign"
  input: "conv_15/biases/Adam"
  input: "conv_15/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_15/biases/Adam/read"
  op: "Identity"
  input: "conv_15/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_15/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_15/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_15/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_15/biases/Adam_1"
  input: "conv_15/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_15/biases/Adam_1/read"
  op: "Identity"
  input: "conv_15/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_13/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_13/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_13/gamma/Adam"
  input: "BatchNorm_13/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_13/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_13/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_13/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_13/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_13/gamma/Adam_1"
  input: "BatchNorm_13/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_13/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_13/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_13/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_13/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_13/beta/Adam"
  input: "BatchNorm_13/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_13/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_13/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_13/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_13/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_13/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_13/beta/Adam_1"
  input: "BatchNorm_13/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_13/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_13/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_16/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_16/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_16/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_16/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_16/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_16/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_16/weights/Adam/Assign"
  op: "Assign"
  input: "conv_16/weights/Adam"
  input: "conv_16/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_16/weights/Adam/read"
  op: "Identity"
  input: "conv_16/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_16/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_16/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_16/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_16/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_16/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_16/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_16/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_16/weights/Adam_1"
  input: "conv_16/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_16/weights/Adam_1/read"
  op: "Identity"
  input: "conv_16/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_16/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_16/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_16/biases/Adam/Assign"
  op: "Assign"
  input: "conv_16/biases/Adam"
  input: "conv_16/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_16/biases/Adam/read"
  op: "Identity"
  input: "conv_16/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_16/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_16/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_16/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_16/biases/Adam_1"
  input: "conv_16/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_16/biases/Adam_1/read"
  op: "Identity"
  input: "conv_16/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_14/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_14/gamma/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_14/gamma/Adam"
  input: "BatchNorm_14/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_14/gamma/Adam/read"
  op: "Identity"
  input: "BatchNorm_14/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_14/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_14/gamma/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_14/gamma/Adam_1"
  input: "BatchNorm_14/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_14/gamma/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_14/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_14/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_14/beta/Adam/Assign"
  op: "Assign"
  input: "BatchNorm_14/beta/Adam"
  input: "BatchNorm_14/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_14/beta/Adam/read"
  op: "Identity"
  input: "BatchNorm_14/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "BatchNorm_14/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "BatchNorm_14/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "BatchNorm_14/beta/Adam_1/Assign"
  op: "Assign"
  input: "BatchNorm_14/beta/Adam_1"
  input: "BatchNorm_14/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "BatchNorm_14/beta/Adam_1/read"
  op: "Identity"
  input: "BatchNorm_14/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_17/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv_17/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_17/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_17/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_17/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_17/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_17/weights/Adam/Assign"
  op: "Assign"
  input: "conv_17/weights/Adam"
  input: "conv_17/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_17/weights/Adam/read"
  op: "Identity"
  input: "conv_17/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "conv_17/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv_17/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_17/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_17/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_17/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_17/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_17/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_17/weights/Adam_1"
  input: "conv_17/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_17/weights/Adam_1/read"
  op: "Identity"
  input: "conv_17/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "conv_17/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_17/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_17/biases/Adam/Assign"
  op: "Assign"
  input: "conv_17/biases/Adam"
  input: "conv_17/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_17/biases/Adam/read"
  op: "Identity"
  input: "conv_17/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "conv_17/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_17/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_17/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_17/biases/Adam_1"
  input: "conv_17/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_17/biases/Adam_1/read"
  op: "Identity"
  input: "conv_17/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_1/weights"
  input: "conv_1/weights/Adam"
  input: "conv_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_1/biases"
  input: "conv_1/biases/Adam"
  input: "conv_1/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_2/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_2/weights"
  input: "conv_2/weights/Adam"
  input: "conv_2/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_2/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_2/biases"
  input: "conv_2/biases/Adam"
  input: "conv_2/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm/gamma"
  input: "BatchNorm/gamma/Adam"
  input: "BatchNorm/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm/beta"
  input: "BatchNorm/beta/Adam"
  input: "BatchNorm/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_3/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_3/weights"
  input: "conv_3/weights/Adam"
  input: "conv_3/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_3/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_3/biases"
  input: "conv_3/biases/Adam"
  input: "conv_3/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_1/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_1/gamma"
  input: "BatchNorm_1/gamma/Adam"
  input: "BatchNorm_1/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_1/beta"
  input: "BatchNorm_1/beta/Adam"
  input: "BatchNorm_1/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_1/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_4/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_4/weights"
  input: "conv_4/weights/Adam"
  input: "conv_4/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_4/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_4/biases"
  input: "conv_4/biases/Adam"
  input: "conv_4/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_2/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_2/gamma"
  input: "BatchNorm_2/gamma/Adam"
  input: "BatchNorm_2/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_2/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_2/beta"
  input: "BatchNorm_2/beta/Adam"
  input: "BatchNorm_2/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_2/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_5/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_5/weights"
  input: "conv_5/weights/Adam"
  input: "conv_5/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_5/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_5/biases"
  input: "conv_5/biases/Adam"
  input: "conv_5/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_5/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_3/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_3/gamma"
  input: "BatchNorm_3/gamma/Adam"
  input: "BatchNorm_3/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_3/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_3/beta"
  input: "BatchNorm_3/beta/Adam"
  input: "BatchNorm_3/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_3/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_6/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_6/weights"
  input: "conv_6/weights/Adam"
  input: "conv_6/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_6/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_6/biases"
  input: "conv_6/biases/Adam"
  input: "conv_6/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_6/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_4/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_4/gamma"
  input: "BatchNorm_4/gamma/Adam"
  input: "BatchNorm_4/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_4/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_4/beta"
  input: "BatchNorm_4/beta/Adam"
  input: "BatchNorm_4/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_4/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_7/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_7/weights"
  input: "conv_7/weights/Adam"
  input: "conv_7/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_7/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_7/biases"
  input: "conv_7/biases/Adam"
  input: "conv_7/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_7/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_5/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_5/gamma"
  input: "BatchNorm_5/gamma/Adam"
  input: "BatchNorm_5/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_5/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_5/beta"
  input: "BatchNorm_5/beta/Adam"
  input: "BatchNorm_5/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_5/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_8/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_8/weights"
  input: "conv_8/weights/Adam"
  input: "conv_8/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_8/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_8/biases"
  input: "conv_8/biases/Adam"
  input: "conv_8/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_8/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_6/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_6/gamma"
  input: "BatchNorm_6/gamma/Adam"
  input: "BatchNorm_6/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_6/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_6/beta"
  input: "BatchNorm_6/beta/Adam"
  input: "BatchNorm_6/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_6/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_9/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_9/weights"
  input: "conv_9/weights/Adam"
  input: "conv_9/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_9/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_9/biases"
  input: "conv_9/biases/Adam"
  input: "conv_9/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_9/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_7/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_7/gamma"
  input: "BatchNorm_7/gamma/Adam"
  input: "BatchNorm_7/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_7/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_7/beta"
  input: "BatchNorm_7/beta/Adam"
  input: "BatchNorm_7/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_7/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_10/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_10/weights"
  input: "conv_10/weights/Adam"
  input: "conv_10/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_10/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_10/biases"
  input: "conv_10/biases/Adam"
  input: "conv_10/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_10/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_8/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_8/gamma"
  input: "BatchNorm_8/gamma/Adam"
  input: "BatchNorm_8/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_8/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_8/beta"
  input: "BatchNorm_8/beta/Adam"
  input: "BatchNorm_8/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_8/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_11/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_11/weights"
  input: "conv_11/weights/Adam"
  input: "conv_11/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_11/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_11/biases"
  input: "conv_11/biases/Adam"
  input: "conv_11/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_11/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_9/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_9/gamma"
  input: "BatchNorm_9/gamma/Adam"
  input: "BatchNorm_9/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_9/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_9/beta"
  input: "BatchNorm_9/beta/Adam"
  input: "BatchNorm_9/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_9/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_12/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_12/weights"
  input: "conv_12/weights/Adam"
  input: "conv_12/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_12/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_12/biases"
  input: "conv_12/biases/Adam"
  input: "conv_12/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_12/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_10/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_10/gamma"
  input: "BatchNorm_10/gamma/Adam"
  input: "BatchNorm_10/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_10/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_10/beta"
  input: "BatchNorm_10/beta/Adam"
  input: "BatchNorm_10/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_10/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_13/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_13/weights"
  input: "conv_13/weights/Adam"
  input: "conv_13/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_13/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_13/biases"
  input: "conv_13/biases/Adam"
  input: "conv_13/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_13/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_11/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_11/gamma"
  input: "BatchNorm_11/gamma/Adam"
  input: "BatchNorm_11/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_11/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_11/beta"
  input: "BatchNorm_11/beta/Adam"
  input: "BatchNorm_11/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_11/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_14/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_14/weights"
  input: "conv_14/weights/Adam"
  input: "conv_14/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_14/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_14/biases"
  input: "conv_14/biases/Adam"
  input: "conv_14/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_14/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_12/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_12/gamma"
  input: "BatchNorm_12/gamma/Adam"
  input: "BatchNorm_12/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_12/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_12/beta"
  input: "BatchNorm_12/beta/Adam"
  input: "BatchNorm_12/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_12/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_15/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_15/weights"
  input: "conv_15/weights/Adam"
  input: "conv_15/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_15/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_15/biases"
  input: "conv_15/biases/Adam"
  input: "conv_15/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_15/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_13/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_13/gamma"
  input: "BatchNorm_13/gamma/Adam"
  input: "BatchNorm_13/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_13/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_13/beta"
  input: "BatchNorm_13/beta/Adam"
  input: "BatchNorm_13/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_13/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_16/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_16/weights"
  input: "conv_16/weights/Adam"
  input: "conv_16/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_16/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_16/biases"
  input: "conv_16/biases/Adam"
  input: "conv_16/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_16/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_14/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_14/gamma"
  input: "BatchNorm_14/gamma/Adam"
  input: "BatchNorm_14/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_BatchNorm_14/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "BatchNorm_14/beta"
  input: "BatchNorm_14/beta/Adam"
  input: "BatchNorm_14/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/BatchNorm_14/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_17/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_17/weights"
  input: "conv_17/weights/Adam"
  input: "conv_17/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv_17/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_17/biases"
  input: "conv_17/biases/Adam"
  input: "conv_17/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Const"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv_17/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_BatchNorm/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_1/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_1/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_10/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_10/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_11/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_11/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_12/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_12/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_13/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_13/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_14/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_14/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_2/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_2/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_3/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_3/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_4/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_4/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_5/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_5/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_6/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_6/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_7/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_7/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_8/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_8/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_9/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_9/gamma/ApplyAdam"
  input: "^Adam/update_conv_1/biases/ApplyAdam"
  input: "^Adam/update_conv_1/weights/ApplyAdam"
  input: "^Adam/update_conv_10/biases/ApplyAdam"
  input: "^Adam/update_conv_10/weights/ApplyAdam"
  input: "^Adam/update_conv_11/biases/ApplyAdam"
  input: "^Adam/update_conv_11/weights/ApplyAdam"
  input: "^Adam/update_conv_12/biases/ApplyAdam"
  input: "^Adam/update_conv_12/weights/ApplyAdam"
  input: "^Adam/update_conv_13/biases/ApplyAdam"
  input: "^Adam/update_conv_13/weights/ApplyAdam"
  input: "^Adam/update_conv_14/biases/ApplyAdam"
  input: "^Adam/update_conv_14/weights/ApplyAdam"
  input: "^Adam/update_conv_15/biases/ApplyAdam"
  input: "^Adam/update_conv_15/weights/ApplyAdam"
  input: "^Adam/update_conv_16/biases/ApplyAdam"
  input: "^Adam/update_conv_16/weights/ApplyAdam"
  input: "^Adam/update_conv_17/biases/ApplyAdam"
  input: "^Adam/update_conv_17/weights/ApplyAdam"
  input: "^Adam/update_conv_2/biases/ApplyAdam"
  input: "^Adam/update_conv_2/weights/ApplyAdam"
  input: "^Adam/update_conv_3/biases/ApplyAdam"
  input: "^Adam/update_conv_3/weights/ApplyAdam"
  input: "^Adam/update_conv_4/biases/ApplyAdam"
  input: "^Adam/update_conv_4/weights/ApplyAdam"
  input: "^Adam/update_conv_5/biases/ApplyAdam"
  input: "^Adam/update_conv_5/weights/ApplyAdam"
  input: "^Adam/update_conv_6/biases/ApplyAdam"
  input: "^Adam/update_conv_6/weights/ApplyAdam"
  input: "^Adam/update_conv_7/biases/ApplyAdam"
  input: "^Adam/update_conv_7/weights/ApplyAdam"
  input: "^Adam/update_conv_8/biases/ApplyAdam"
  input: "^Adam/update_conv_8/weights/ApplyAdam"
  input: "^Adam/update_conv_9/biases/ApplyAdam"
  input: "^Adam/update_conv_9/weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_BatchNorm/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_1/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_1/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_10/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_10/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_11/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_11/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_12/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_12/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_13/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_13/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_14/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_14/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_2/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_2/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_3/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_3/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_4/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_4/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_5/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_5/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_6/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_6/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_7/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_7/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_8/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_8/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_9/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_9/gamma/ApplyAdam"
  input: "^Adam/update_conv_1/biases/ApplyAdam"
  input: "^Adam/update_conv_1/weights/ApplyAdam"
  input: "^Adam/update_conv_10/biases/ApplyAdam"
  input: "^Adam/update_conv_10/weights/ApplyAdam"
  input: "^Adam/update_conv_11/biases/ApplyAdam"
  input: "^Adam/update_conv_11/weights/ApplyAdam"
  input: "^Adam/update_conv_12/biases/ApplyAdam"
  input: "^Adam/update_conv_12/weights/ApplyAdam"
  input: "^Adam/update_conv_13/biases/ApplyAdam"
  input: "^Adam/update_conv_13/weights/ApplyAdam"
  input: "^Adam/update_conv_14/biases/ApplyAdam"
  input: "^Adam/update_conv_14/weights/ApplyAdam"
  input: "^Adam/update_conv_15/biases/ApplyAdam"
  input: "^Adam/update_conv_15/weights/ApplyAdam"
  input: "^Adam/update_conv_16/biases/ApplyAdam"
  input: "^Adam/update_conv_16/weights/ApplyAdam"
  input: "^Adam/update_conv_17/biases/ApplyAdam"
  input: "^Adam/update_conv_17/weights/ApplyAdam"
  input: "^Adam/update_conv_2/biases/ApplyAdam"
  input: "^Adam/update_conv_2/weights/ApplyAdam"
  input: "^Adam/update_conv_3/biases/ApplyAdam"
  input: "^Adam/update_conv_3/weights/ApplyAdam"
  input: "^Adam/update_conv_4/biases/ApplyAdam"
  input: "^Adam/update_conv_4/weights/ApplyAdam"
  input: "^Adam/update_conv_5/biases/ApplyAdam"
  input: "^Adam/update_conv_5/weights/ApplyAdam"
  input: "^Adam/update_conv_6/biases/ApplyAdam"
  input: "^Adam/update_conv_6/weights/ApplyAdam"
  input: "^Adam/update_conv_7/biases/ApplyAdam"
  input: "^Adam/update_conv_7/weights/ApplyAdam"
  input: "^Adam/update_conv_8/biases/ApplyAdam"
  input: "^Adam/update_conv_8/weights/ApplyAdam"
  input: "^Adam/update_conv_9/biases/ApplyAdam"
  input: "^Adam/update_conv_9/weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  input: "^Adam/update_BatchNorm/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_1/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_1/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_10/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_10/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_11/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_11/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_12/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_12/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_13/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_13/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_14/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_14/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_2/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_2/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_3/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_3/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_4/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_4/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_5/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_5/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_6/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_6/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_7/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_7/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_8/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_8/gamma/ApplyAdam"
  input: "^Adam/update_BatchNorm_9/beta/ApplyAdam"
  input: "^Adam/update_BatchNorm_9/gamma/ApplyAdam"
  input: "^Adam/update_conv_1/biases/ApplyAdam"
  input: "^Adam/update_conv_1/weights/ApplyAdam"
  input: "^Adam/update_conv_10/biases/ApplyAdam"
  input: "^Adam/update_conv_10/weights/ApplyAdam"
  input: "^Adam/update_conv_11/biases/ApplyAdam"
  input: "^Adam/update_conv_11/weights/ApplyAdam"
  input: "^Adam/update_conv_12/biases/ApplyAdam"
  input: "^Adam/update_conv_12/weights/ApplyAdam"
  input: "^Adam/update_conv_13/biases/ApplyAdam"
  input: "^Adam/update_conv_13/weights/ApplyAdam"
  input: "^Adam/update_conv_14/biases/ApplyAdam"
  input: "^Adam/update_conv_14/weights/ApplyAdam"
  input: "^Adam/update_conv_15/biases/ApplyAdam"
  input: "^Adam/update_conv_15/weights/ApplyAdam"
  input: "^Adam/update_conv_16/biases/ApplyAdam"
  input: "^Adam/update_conv_16/weights/ApplyAdam"
  input: "^Adam/update_conv_17/biases/ApplyAdam"
  input: "^Adam/update_conv_17/weights/ApplyAdam"
  input: "^Adam/update_conv_2/biases/ApplyAdam"
  input: "^Adam/update_conv_2/weights/ApplyAdam"
  input: "^Adam/update_conv_3/biases/ApplyAdam"
  input: "^Adam/update_conv_3/weights/ApplyAdam"
  input: "^Adam/update_conv_4/biases/ApplyAdam"
  input: "^Adam/update_conv_4/weights/ApplyAdam"
  input: "^Adam/update_conv_5/biases/ApplyAdam"
  input: "^Adam/update_conv_5/weights/ApplyAdam"
  input: "^Adam/update_conv_6/biases/ApplyAdam"
  input: "^Adam/update_conv_6/weights/ApplyAdam"
  input: "^Adam/update_conv_7/biases/ApplyAdam"
  input: "^Adam/update_conv_7/weights/ApplyAdam"
  input: "^Adam/update_conv_8/biases/ApplyAdam"
  input: "^Adam/update_conv_8/weights/ApplyAdam"
  input: "^Adam/update_conv_9/biases/ApplyAdam"
  input: "^Adam/update_conv_9/weights/ApplyAdam"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  input: "^BatchNorm/AssignMovingAvg"
  input: "^BatchNorm/AssignMovingAvg_1"
  input: "^BatchNorm_1/AssignMovingAvg"
  input: "^BatchNorm_1/AssignMovingAvg_1"
  input: "^BatchNorm_10/AssignMovingAvg"
  input: "^BatchNorm_10/AssignMovingAvg_1"
  input: "^BatchNorm_11/AssignMovingAvg"
  input: "^BatchNorm_11/AssignMovingAvg_1"
  input: "^BatchNorm_12/AssignMovingAvg"
  input: "^BatchNorm_12/AssignMovingAvg_1"
  input: "^BatchNorm_13/AssignMovingAvg"
  input: "^BatchNorm_13/AssignMovingAvg_1"
  input: "^BatchNorm_14/AssignMovingAvg"
  input: "^BatchNorm_14/AssignMovingAvg_1"
  input: "^BatchNorm_2/AssignMovingAvg"
  input: "^BatchNorm_2/AssignMovingAvg_1"
  input: "^BatchNorm_3/AssignMovingAvg"
  input: "^BatchNorm_3/AssignMovingAvg_1"
  input: "^BatchNorm_4/AssignMovingAvg"
  input: "^BatchNorm_4/AssignMovingAvg_1"
  input: "^BatchNorm_5/AssignMovingAvg"
  input: "^BatchNorm_5/AssignMovingAvg_1"
  input: "^BatchNorm_6/AssignMovingAvg"
  input: "^BatchNorm_6/AssignMovingAvg_1"
  input: "^BatchNorm_7/AssignMovingAvg"
  input: "^BatchNorm_7/AssignMovingAvg_1"
  input: "^BatchNorm_8/AssignMovingAvg"
  input: "^BatchNorm_8/AssignMovingAvg_1"
  input: "^BatchNorm_9/AssignMovingAvg"
  input: "^BatchNorm_9/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "input_producer/fraction_of_32_full"
  input: "cost/cost"
  input: "input_image/input_image"
  input: "noisy/noisy"
  input: "clear/clear"
  input: "learning_rate"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^BatchNorm/beta/Adam/Assign"
  input: "^BatchNorm/beta/Adam_1/Assign"
  input: "^BatchNorm/beta/Assign"
  input: "^BatchNorm/gamma/Adam/Assign"
  input: "^BatchNorm/gamma/Adam_1/Assign"
  input: "^BatchNorm/gamma/Assign"
  input: "^BatchNorm/moving_mean/Assign"
  input: "^BatchNorm/moving_variance/Assign"
  input: "^BatchNorm_1/beta/Adam/Assign"
  input: "^BatchNorm_1/beta/Adam_1/Assign"
  input: "^BatchNorm_1/beta/Assign"
  input: "^BatchNorm_1/gamma/Adam/Assign"
  input: "^BatchNorm_1/gamma/Adam_1/Assign"
  input: "^BatchNorm_1/gamma/Assign"
  input: "^BatchNorm_1/moving_mean/Assign"
  input: "^BatchNorm_1/moving_variance/Assign"
  input: "^BatchNorm_10/beta/Adam/Assign"
  input: "^BatchNorm_10/beta/Adam_1/Assign"
  input: "^BatchNorm_10/beta/Assign"
  input: "^BatchNorm_10/gamma/Adam/Assign"
  input: "^BatchNorm_10/gamma/Adam_1/Assign"
  input: "^BatchNorm_10/gamma/Assign"
  input: "^BatchNorm_10/moving_mean/Assign"
  input: "^BatchNorm_10/moving_variance/Assign"
  input: "^BatchNorm_11/beta/Adam/Assign"
  input: "^BatchNorm_11/beta/Adam_1/Assign"
  input: "^BatchNorm_11/beta/Assign"
  input: "^BatchNorm_11/gamma/Adam/Assign"
  input: "^BatchNorm_11/gamma/Adam_1/Assign"
  input: "^BatchNorm_11/gamma/Assign"
  input: "^BatchNorm_11/moving_mean/Assign"
  input: "^BatchNorm_11/moving_variance/Assign"
  input: "^BatchNorm_12/beta/Adam/Assign"
  input: "^BatchNorm_12/beta/Adam_1/Assign"
  input: "^BatchNorm_12/beta/Assign"
  input: "^BatchNorm_12/gamma/Adam/Assign"
  input: "^BatchNorm_12/gamma/Adam_1/Assign"
  input: "^BatchNorm_12/gamma/Assign"
  input: "^BatchNorm_12/moving_mean/Assign"
  input: "^BatchNorm_12/moving_variance/Assign"
  input: "^BatchNorm_13/beta/Adam/Assign"
  input: "^BatchNorm_13/beta/Adam_1/Assign"
  input: "^BatchNorm_13/beta/Assign"
  input: "^BatchNorm_13/gamma/Adam/Assign"
  input: "^BatchNorm_13/gamma/Adam_1/Assign"
  input: "^BatchNorm_13/gamma/Assign"
  input: "^BatchNorm_13/moving_mean/Assign"
  input: "^BatchNorm_13/moving_variance/Assign"
  input: "^BatchNorm_14/beta/Adam/Assign"
  input: "^BatchNorm_14/beta/Adam_1/Assign"
  input: "^BatchNorm_14/beta/Assign"
  input: "^BatchNorm_14/gamma/Adam/Assign"
  input: "^BatchNorm_14/gamma/Adam_1/Assign"
  input: "^BatchNorm_14/gamma/Assign"
  input: "^BatchNorm_14/moving_mean/Assign"
  input: "^BatchNorm_14/moving_variance/Assign"
  input: "^BatchNorm_2/beta/Adam/Assign"
  input: "^BatchNorm_2/beta/Adam_1/Assign"
  input: "^BatchNorm_2/beta/Assign"
  input: "^BatchNorm_2/gamma/Adam/Assign"
  input: "^BatchNorm_2/gamma/Adam_1/Assign"
  input: "^BatchNorm_2/gamma/Assign"
  input: "^BatchNorm_2/moving_mean/Assign"
  input: "^BatchNorm_2/moving_variance/Assign"
  input: "^BatchNorm_3/beta/Adam/Assign"
  input: "^BatchNorm_3/beta/Adam_1/Assign"
  input: "^BatchNorm_3/beta/Assign"
  input: "^BatchNorm_3/gamma/Adam/Assign"
  input: "^BatchNorm_3/gamma/Adam_1/Assign"
  input: "^BatchNorm_3/gamma/Assign"
  input: "^BatchNorm_3/moving_mean/Assign"
  input: "^BatchNorm_3/moving_variance/Assign"
  input: "^BatchNorm_4/beta/Adam/Assign"
  input: "^BatchNorm_4/beta/Adam_1/Assign"
  input: "^BatchNorm_4/beta/Assign"
  input: "^BatchNorm_4/gamma/Adam/Assign"
  input: "^BatchNorm_4/gamma/Adam_1/Assign"
  input: "^BatchNorm_4/gamma/Assign"
  input: "^BatchNorm_4/moving_mean/Assign"
  input: "^BatchNorm_4/moving_variance/Assign"
  input: "^BatchNorm_5/beta/Adam/Assign"
  input: "^BatchNorm_5/beta/Adam_1/Assign"
  input: "^BatchNorm_5/beta/Assign"
  input: "^BatchNorm_5/gamma/Adam/Assign"
  input: "^BatchNorm_5/gamma/Adam_1/Assign"
  input: "^BatchNorm_5/gamma/Assign"
  input: "^BatchNorm_5/moving_mean/Assign"
  input: "^BatchNorm_5/moving_variance/Assign"
  input: "^BatchNorm_6/beta/Adam/Assign"
  input: "^BatchNorm_6/beta/Adam_1/Assign"
  input: "^BatchNorm_6/beta/Assign"
  input: "^BatchNorm_6/gamma/Adam/Assign"
  input: "^BatchNorm_6/gamma/Adam_1/Assign"
  input: "^BatchNorm_6/gamma/Assign"
  input: "^BatchNorm_6/moving_mean/Assign"
  input: "^BatchNorm_6/moving_variance/Assign"
  input: "^BatchNorm_7/beta/Adam/Assign"
  input: "^BatchNorm_7/beta/Adam_1/Assign"
  input: "^BatchNorm_7/beta/Assign"
  input: "^BatchNorm_7/gamma/Adam/Assign"
  input: "^BatchNorm_7/gamma/Adam_1/Assign"
  input: "^BatchNorm_7/gamma/Assign"
  input: "^BatchNorm_7/moving_mean/Assign"
  input: "^BatchNorm_7/moving_variance/Assign"
  input: "^BatchNorm_8/beta/Adam/Assign"
  input: "^BatchNorm_8/beta/Adam_1/Assign"
  input: "^BatchNorm_8/beta/Assign"
  input: "^BatchNorm_8/gamma/Adam/Assign"
  input: "^BatchNorm_8/gamma/Adam_1/Assign"
  input: "^BatchNorm_8/gamma/Assign"
  input: "^BatchNorm_8/moving_mean/Assign"
  input: "^BatchNorm_8/moving_variance/Assign"
  input: "^BatchNorm_9/beta/Adam/Assign"
  input: "^BatchNorm_9/beta/Adam_1/Assign"
  input: "^BatchNorm_9/beta/Assign"
  input: "^BatchNorm_9/gamma/Adam/Assign"
  input: "^BatchNorm_9/gamma/Adam_1/Assign"
  input: "^BatchNorm_9/gamma/Assign"
  input: "^BatchNorm_9/moving_mean/Assign"
  input: "^BatchNorm_9/moving_variance/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^conv_1/biases/Adam/Assign"
  input: "^conv_1/biases/Adam_1/Assign"
  input: "^conv_1/biases/Assign"
  input: "^conv_1/weights/Adam/Assign"
  input: "^conv_1/weights/Adam_1/Assign"
  input: "^conv_1/weights/Assign"
  input: "^conv_10/biases/Adam/Assign"
  input: "^conv_10/biases/Adam_1/Assign"
  input: "^conv_10/biases/Assign"
  input: "^conv_10/weights/Adam/Assign"
  input: "^conv_10/weights/Adam_1/Assign"
  input: "^conv_10/weights/Assign"
  input: "^conv_11/biases/Adam/Assign"
  input: "^conv_11/biases/Adam_1/Assign"
  input: "^conv_11/biases/Assign"
  input: "^conv_11/weights/Adam/Assign"
  input: "^conv_11/weights/Adam_1/Assign"
  input: "^conv_11/weights/Assign"
  input: "^conv_12/biases/Adam/Assign"
  input: "^conv_12/biases/Adam_1/Assign"
  input: "^conv_12/biases/Assign"
  input: "^conv_12/weights/Adam/Assign"
  input: "^conv_12/weights/Adam_1/Assign"
  input: "^conv_12/weights/Assign"
  input: "^conv_13/biases/Adam/Assign"
  input: "^conv_13/biases/Adam_1/Assign"
  input: "^conv_13/biases/Assign"
  input: "^conv_13/weights/Adam/Assign"
  input: "^conv_13/weights/Adam_1/Assign"
  input: "^conv_13/weights/Assign"
  input: "^conv_14/biases/Adam/Assign"
  input: "^conv_14/biases/Adam_1/Assign"
  input: "^conv_14/biases/Assign"
  input: "^conv_14/weights/Adam/Assign"
  input: "^conv_14/weights/Adam_1/Assign"
  input: "^conv_14/weights/Assign"
  input: "^conv_15/biases/Adam/Assign"
  input: "^conv_15/biases/Adam_1/Assign"
  input: "^conv_15/biases/Assign"
  input: "^conv_15/weights/Adam/Assign"
  input: "^conv_15/weights/Adam_1/Assign"
  input: "^conv_15/weights/Assign"
  input: "^conv_16/biases/Adam/Assign"
  input: "^conv_16/biases/Adam_1/Assign"
  input: "^conv_16/biases/Assign"
  input: "^conv_16/weights/Adam/Assign"
  input: "^conv_16/weights/Adam_1/Assign"
  input: "^conv_16/weights/Assign"
  input: "^conv_17/biases/Adam/Assign"
  input: "^conv_17/biases/Adam_1/Assign"
  input: "^conv_17/biases/Assign"
  input: "^conv_17/weights/Adam/Assign"
  input: "^conv_17/weights/Adam_1/Assign"
  input: "^conv_17/weights/Assign"
  input: "^conv_2/biases/Adam/Assign"
  input: "^conv_2/biases/Adam_1/Assign"
  input: "^conv_2/biases/Assign"
  input: "^conv_2/weights/Adam/Assign"
  input: "^conv_2/weights/Adam_1/Assign"
  input: "^conv_2/weights/Assign"
  input: "^conv_3/biases/Adam/Assign"
  input: "^conv_3/biases/Adam_1/Assign"
  input: "^conv_3/biases/Assign"
  input: "^conv_3/weights/Adam/Assign"
  input: "^conv_3/weights/Adam_1/Assign"
  input: "^conv_3/weights/Assign"
  input: "^conv_4/biases/Adam/Assign"
  input: "^conv_4/biases/Adam_1/Assign"
  input: "^conv_4/biases/Assign"
  input: "^conv_4/weights/Adam/Assign"
  input: "^conv_4/weights/Adam_1/Assign"
  input: "^conv_4/weights/Assign"
  input: "^conv_5/biases/Adam/Assign"
  input: "^conv_5/biases/Adam_1/Assign"
  input: "^conv_5/biases/Assign"
  input: "^conv_5/weights/Adam/Assign"
  input: "^conv_5/weights/Adam_1/Assign"
  input: "^conv_5/weights/Assign"
  input: "^conv_6/biases/Adam/Assign"
  input: "^conv_6/biases/Adam_1/Assign"
  input: "^conv_6/biases/Assign"
  input: "^conv_6/weights/Adam/Assign"
  input: "^conv_6/weights/Adam_1/Assign"
  input: "^conv_6/weights/Assign"
  input: "^conv_7/biases/Adam/Assign"
  input: "^conv_7/biases/Adam_1/Assign"
  input: "^conv_7/biases/Assign"
  input: "^conv_7/weights/Adam/Assign"
  input: "^conv_7/weights/Adam_1/Assign"
  input: "^conv_7/weights/Assign"
  input: "^conv_8/biases/Adam/Assign"
  input: "^conv_8/biases/Adam_1/Assign"
  input: "^conv_8/biases/Assign"
  input: "^conv_8/weights/Adam/Assign"
  input: "^conv_8/weights/Adam_1/Assign"
  input: "^conv_8/weights/Assign"
  input: "^conv_9/biases/Adam/Assign"
  input: "^conv_9/biases/Adam_1/Assign"
  input: "^conv_9/biases/Assign"
  input: "^conv_9/weights/Adam/Assign"
  input: "^conv_9/weights/Adam_1/Assign"
  input: "^conv_9/weights/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv_1/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv_2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv_2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "conv_3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "conv_3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv_4/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv_4/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv_5/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv_5/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "conv_6/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "conv_6/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "conv_7/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "conv_7/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "conv_8/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "conv_8/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "conv_9/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "conv_9/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "conv_10/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "conv_10/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "conv_11/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "conv_11/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "conv_12/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "conv_12/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "conv_13/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "conv_13/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "conv_14/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "conv_14/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "conv_15/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "conv_15/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "conv_16/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "conv_16/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "conv_17/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "conv_17/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "conv_1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "conv_1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "conv_1/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "conv_1/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "conv_2/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "conv_2/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "conv_2/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "conv_2/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "BatchNorm/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "BatchNorm/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "conv_3/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "conv_3/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "conv_3/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "conv_3/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "conv_4/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "conv_4/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "conv_4/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "conv_4/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "conv_5/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "conv_5/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "conv_5/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "conv_5/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "conv_6/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "conv_6/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "conv_6/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "conv_6/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "conv_7/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "conv_7/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "conv_7/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "conv_7/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "conv_8/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "conv_8/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "conv_8/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "conv_8/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "conv_9/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "conv_9/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "conv_9/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "conv_9/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "conv_10/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "conv_10/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "conv_10/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "conv_10/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "conv_11/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "conv_11/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "conv_11/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "conv_11/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "conv_12/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "conv_12/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "conv_12/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "conv_12/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "conv_13/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "conv_13/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "conv_13/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "conv_13/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_196"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_197"
  op: "IsVariableInitialized"
  input: "conv_14/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_198"
  op: "IsVariableInitialized"
  input: "conv_14/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_199"
  op: "IsVariableInitialized"
  input: "conv_14/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_200"
  op: "IsVariableInitialized"
  input: "conv_14/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_201"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_202"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_203"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_204"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_205"
  op: "IsVariableInitialized"
  input: "conv_15/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_206"
  op: "IsVariableInitialized"
  input: "conv_15/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_207"
  op: "IsVariableInitialized"
  input: "conv_15/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_208"
  op: "IsVariableInitialized"
  input: "conv_15/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_209"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_210"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_211"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_212"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_213"
  op: "IsVariableInitialized"
  input: "conv_16/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_214"
  op: "IsVariableInitialized"
  input: "conv_16/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_215"
  op: "IsVariableInitialized"
  input: "conv_16/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_216"
  op: "IsVariableInitialized"
  input: "conv_16/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_217"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_218"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_219"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_220"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_221"
  op: "IsVariableInitialized"
  input: "conv_17/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_222"
  op: "IsVariableInitialized"
  input: "conv_17/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_223"
  op: "IsVariableInitialized"
  input: "conv_17/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_224"
  op: "IsVariableInitialized"
  input: "conv_17/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  input: "report_uninitialized_variables/IsVariableInitialized_97"
  input: "report_uninitialized_variables/IsVariableInitialized_98"
  input: "report_uninitialized_variables/IsVariableInitialized_99"
  input: "report_uninitialized_variables/IsVariableInitialized_100"
  input: "report_uninitialized_variables/IsVariableInitialized_101"
  input: "report_uninitialized_variables/IsVariableInitialized_102"
  input: "report_uninitialized_variables/IsVariableInitialized_103"
  input: "report_uninitialized_variables/IsVariableInitialized_104"
  input: "report_uninitialized_variables/IsVariableInitialized_105"
  input: "report_uninitialized_variables/IsVariableInitialized_106"
  input: "report_uninitialized_variables/IsVariableInitialized_107"
  input: "report_uninitialized_variables/IsVariableInitialized_108"
  input: "report_uninitialized_variables/IsVariableInitialized_109"
  input: "report_uninitialized_variables/IsVariableInitialized_110"
  input: "report_uninitialized_variables/IsVariableInitialized_111"
  input: "report_uninitialized_variables/IsVariableInitialized_112"
  input: "report_uninitialized_variables/IsVariableInitialized_113"
  input: "report_uninitialized_variables/IsVariableInitialized_114"
  input: "report_uninitialized_variables/IsVariableInitialized_115"
  input: "report_uninitialized_variables/IsVariableInitialized_116"
  input: "report_uninitialized_variables/IsVariableInitialized_117"
  input: "report_uninitialized_variables/IsVariableInitialized_118"
  input: "report_uninitialized_variables/IsVariableInitialized_119"
  input: "report_uninitialized_variables/IsVariableInitialized_120"
  input: "report_uninitialized_variables/IsVariableInitialized_121"
  input: "report_uninitialized_variables/IsVariableInitialized_122"
  input: "report_uninitialized_variables/IsVariableInitialized_123"
  input: "report_uninitialized_variables/IsVariableInitialized_124"
  input: "report_uninitialized_variables/IsVariableInitialized_125"
  input: "report_uninitialized_variables/IsVariableInitialized_126"
  input: "report_uninitialized_variables/IsVariableInitialized_127"
  input: "report_uninitialized_variables/IsVariableInitialized_128"
  input: "report_uninitialized_variables/IsVariableInitialized_129"
  input: "report_uninitialized_variables/IsVariableInitialized_130"
  input: "report_uninitialized_variables/IsVariableInitialized_131"
  input: "report_uninitialized_variables/IsVariableInitialized_132"
  input: "report_uninitialized_variables/IsVariableInitialized_133"
  input: "report_uninitialized_variables/IsVariableInitialized_134"
  input: "report_uninitialized_variables/IsVariableInitialized_135"
  input: "report_uninitialized_variables/IsVariableInitialized_136"
  input: "report_uninitialized_variables/IsVariableInitialized_137"
  input: "report_uninitialized_variables/IsVariableInitialized_138"
  input: "report_uninitialized_variables/IsVariableInitialized_139"
  input: "report_uninitialized_variables/IsVariableInitialized_140"
  input: "report_uninitialized_variables/IsVariableInitialized_141"
  input: "report_uninitialized_variables/IsVariableInitialized_142"
  input: "report_uninitialized_variables/IsVariableInitialized_143"
  input: "report_uninitialized_variables/IsVariableInitialized_144"
  input: "report_uninitialized_variables/IsVariableInitialized_145"
  input: "report_uninitialized_variables/IsVariableInitialized_146"
  input: "report_uninitialized_variables/IsVariableInitialized_147"
  input: "report_uninitialized_variables/IsVariableInitialized_148"
  input: "report_uninitialized_variables/IsVariableInitialized_149"
  input: "report_uninitialized_variables/IsVariableInitialized_150"
  input: "report_uninitialized_variables/IsVariableInitialized_151"
  input: "report_uninitialized_variables/IsVariableInitialized_152"
  input: "report_uninitialized_variables/IsVariableInitialized_153"
  input: "report_uninitialized_variables/IsVariableInitialized_154"
  input: "report_uninitialized_variables/IsVariableInitialized_155"
  input: "report_uninitialized_variables/IsVariableInitialized_156"
  input: "report_uninitialized_variables/IsVariableInitialized_157"
  input: "report_uninitialized_variables/IsVariableInitialized_158"
  input: "report_uninitialized_variables/IsVariableInitialized_159"
  input: "report_uninitialized_variables/IsVariableInitialized_160"
  input: "report_uninitialized_variables/IsVariableInitialized_161"
  input: "report_uninitialized_variables/IsVariableInitialized_162"
  input: "report_uninitialized_variables/IsVariableInitialized_163"
  input: "report_uninitialized_variables/IsVariableInitialized_164"
  input: "report_uninitialized_variables/IsVariableInitialized_165"
  input: "report_uninitialized_variables/IsVariableInitialized_166"
  input: "report_uninitialized_variables/IsVariableInitialized_167"
  input: "report_uninitialized_variables/IsVariableInitialized_168"
  input: "report_uninitialized_variables/IsVariableInitialized_169"
  input: "report_uninitialized_variables/IsVariableInitialized_170"
  input: "report_uninitialized_variables/IsVariableInitialized_171"
  input: "report_uninitialized_variables/IsVariableInitialized_172"
  input: "report_uninitialized_variables/IsVariableInitialized_173"
  input: "report_uninitialized_variables/IsVariableInitialized_174"
  input: "report_uninitialized_variables/IsVariableInitialized_175"
  input: "report_uninitialized_variables/IsVariableInitialized_176"
  input: "report_uninitialized_variables/IsVariableInitialized_177"
  input: "report_uninitialized_variables/IsVariableInitialized_178"
  input: "report_uninitialized_variables/IsVariableInitialized_179"
  input: "report_uninitialized_variables/IsVariableInitialized_180"
  input: "report_uninitialized_variables/IsVariableInitialized_181"
  input: "report_uninitialized_variables/IsVariableInitialized_182"
  input: "report_uninitialized_variables/IsVariableInitialized_183"
  input: "report_uninitialized_variables/IsVariableInitialized_184"
  input: "report_uninitialized_variables/IsVariableInitialized_185"
  input: "report_uninitialized_variables/IsVariableInitialized_186"
  input: "report_uninitialized_variables/IsVariableInitialized_187"
  input: "report_uninitialized_variables/IsVariableInitialized_188"
  input: "report_uninitialized_variables/IsVariableInitialized_189"
  input: "report_uninitialized_variables/IsVariableInitialized_190"
  input: "report_uninitialized_variables/IsVariableInitialized_191"
  input: "report_uninitialized_variables/IsVariableInitialized_192"
  input: "report_uninitialized_variables/IsVariableInitialized_193"
  input: "report_uninitialized_variables/IsVariableInitialized_194"
  input: "report_uninitialized_variables/IsVariableInitialized_195"
  input: "report_uninitialized_variables/IsVariableInitialized_196"
  input: "report_uninitialized_variables/IsVariableInitialized_197"
  input: "report_uninitialized_variables/IsVariableInitialized_198"
  input: "report_uninitialized_variables/IsVariableInitialized_199"
  input: "report_uninitialized_variables/IsVariableInitialized_200"
  input: "report_uninitialized_variables/IsVariableInitialized_201"
  input: "report_uninitialized_variables/IsVariableInitialized_202"
  input: "report_uninitialized_variables/IsVariableInitialized_203"
  input: "report_uninitialized_variables/IsVariableInitialized_204"
  input: "report_uninitialized_variables/IsVariableInitialized_205"
  input: "report_uninitialized_variables/IsVariableInitialized_206"
  input: "report_uninitialized_variables/IsVariableInitialized_207"
  input: "report_uninitialized_variables/IsVariableInitialized_208"
  input: "report_uninitialized_variables/IsVariableInitialized_209"
  input: "report_uninitialized_variables/IsVariableInitialized_210"
  input: "report_uninitialized_variables/IsVariableInitialized_211"
  input: "report_uninitialized_variables/IsVariableInitialized_212"
  input: "report_uninitialized_variables/IsVariableInitialized_213"
  input: "report_uninitialized_variables/IsVariableInitialized_214"
  input: "report_uninitialized_variables/IsVariableInitialized_215"
  input: "report_uninitialized_variables/IsVariableInitialized_216"
  input: "report_uninitialized_variables/IsVariableInitialized_217"
  input: "report_uninitialized_variables/IsVariableInitialized_218"
  input: "report_uninitialized_variables/IsVariableInitialized_219"
  input: "report_uninitialized_variables/IsVariableInitialized_220"
  input: "report_uninitialized_variables/IsVariableInitialized_221"
  input: "report_uninitialized_variables/IsVariableInitialized_222"
  input: "report_uninitialized_variables/IsVariableInitialized_223"
  input: "report_uninitialized_variables/IsVariableInitialized_224"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 225
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 225
          }
        }
        string_val: "global_step"
        string_val: "conv_1/weights"
        string_val: "conv_1/biases"
        string_val: "conv_2/weights"
        string_val: "conv_2/biases"
        string_val: "BatchNorm/gamma"
        string_val: "BatchNorm/beta"
        string_val: "BatchNorm/moving_mean"
        string_val: "BatchNorm/moving_variance"
        string_val: "conv_3/weights"
        string_val: "conv_3/biases"
        string_val: "BatchNorm_1/gamma"
        string_val: "BatchNorm_1/beta"
        string_val: "BatchNorm_1/moving_mean"
        string_val: "BatchNorm_1/moving_variance"
        string_val: "conv_4/weights"
        string_val: "conv_4/biases"
        string_val: "BatchNorm_2/gamma"
        string_val: "BatchNorm_2/beta"
        string_val: "BatchNorm_2/moving_mean"
        string_val: "BatchNorm_2/moving_variance"
        string_val: "conv_5/weights"
        string_val: "conv_5/biases"
        string_val: "BatchNorm_3/gamma"
        string_val: "BatchNorm_3/beta"
        string_val: "BatchNorm_3/moving_mean"
        string_val: "BatchNorm_3/moving_variance"
        string_val: "conv_6/weights"
        string_val: "conv_6/biases"
        string_val: "BatchNorm_4/gamma"
        string_val: "BatchNorm_4/beta"
        string_val: "BatchNorm_4/moving_mean"
        string_val: "BatchNorm_4/moving_variance"
        string_val: "conv_7/weights"
        string_val: "conv_7/biases"
        string_val: "BatchNorm_5/gamma"
        string_val: "BatchNorm_5/beta"
        string_val: "BatchNorm_5/moving_mean"
        string_val: "BatchNorm_5/moving_variance"
        string_val: "conv_8/weights"
        string_val: "conv_8/biases"
        string_val: "BatchNorm_6/gamma"
        string_val: "BatchNorm_6/beta"
        string_val: "BatchNorm_6/moving_mean"
        string_val: "BatchNorm_6/moving_variance"
        string_val: "conv_9/weights"
        string_val: "conv_9/biases"
        string_val: "BatchNorm_7/gamma"
        string_val: "BatchNorm_7/beta"
        string_val: "BatchNorm_7/moving_mean"
        string_val: "BatchNorm_7/moving_variance"
        string_val: "conv_10/weights"
        string_val: "conv_10/biases"
        string_val: "BatchNorm_8/gamma"
        string_val: "BatchNorm_8/beta"
        string_val: "BatchNorm_8/moving_mean"
        string_val: "BatchNorm_8/moving_variance"
        string_val: "conv_11/weights"
        string_val: "conv_11/biases"
        string_val: "BatchNorm_9/gamma"
        string_val: "BatchNorm_9/beta"
        string_val: "BatchNorm_9/moving_mean"
        string_val: "BatchNorm_9/moving_variance"
        string_val: "conv_12/weights"
        string_val: "conv_12/biases"
        string_val: "BatchNorm_10/gamma"
        string_val: "BatchNorm_10/beta"
        string_val: "BatchNorm_10/moving_mean"
        string_val: "BatchNorm_10/moving_variance"
        string_val: "conv_13/weights"
        string_val: "conv_13/biases"
        string_val: "BatchNorm_11/gamma"
        string_val: "BatchNorm_11/beta"
        string_val: "BatchNorm_11/moving_mean"
        string_val: "BatchNorm_11/moving_variance"
        string_val: "conv_14/weights"
        string_val: "conv_14/biases"
        string_val: "BatchNorm_12/gamma"
        string_val: "BatchNorm_12/beta"
        string_val: "BatchNorm_12/moving_mean"
        string_val: "BatchNorm_12/moving_variance"
        string_val: "conv_15/weights"
        string_val: "conv_15/biases"
        string_val: "BatchNorm_13/gamma"
        string_val: "BatchNorm_13/beta"
        string_val: "BatchNorm_13/moving_mean"
        string_val: "BatchNorm_13/moving_variance"
        string_val: "conv_16/weights"
        string_val: "conv_16/biases"
        string_val: "BatchNorm_14/gamma"
        string_val: "BatchNorm_14/beta"
        string_val: "BatchNorm_14/moving_mean"
        string_val: "BatchNorm_14/moving_variance"
        string_val: "conv_17/weights"
        string_val: "conv_17/biases"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv_1/weights/Adam"
        string_val: "conv_1/weights/Adam_1"
        string_val: "conv_1/biases/Adam"
        string_val: "conv_1/biases/Adam_1"
        string_val: "conv_2/weights/Adam"
        string_val: "conv_2/weights/Adam_1"
        string_val: "conv_2/biases/Adam"
        string_val: "conv_2/biases/Adam_1"
        string_val: "BatchNorm/gamma/Adam"
        string_val: "BatchNorm/gamma/Adam_1"
        string_val: "BatchNorm/beta/Adam"
        string_val: "BatchNorm/beta/Adam_1"
        string_val: "conv_3/weights/Adam"
        string_val: "conv_3/weights/Adam_1"
        string_val: "conv_3/biases/Adam"
        string_val: "conv_3/biases/Adam_1"
        string_val: "BatchNorm_1/gamma/Adam"
        string_val: "BatchNorm_1/gamma/Adam_1"
        string_val: "BatchNorm_1/beta/Adam"
        string_val: "BatchNorm_1/beta/Adam_1"
        string_val: "conv_4/weights/Adam"
        string_val: "conv_4/weights/Adam_1"
        string_val: "conv_4/biases/Adam"
        string_val: "conv_4/biases/Adam_1"
        string_val: "BatchNorm_2/gamma/Adam"
        string_val: "BatchNorm_2/gamma/Adam_1"
        string_val: "BatchNorm_2/beta/Adam"
        string_val: "BatchNorm_2/beta/Adam_1"
        string_val: "conv_5/weights/Adam"
        string_val: "conv_5/weights/Adam_1"
        string_val: "conv_5/biases/Adam"
        string_val: "conv_5/biases/Adam_1"
        string_val: "BatchNorm_3/gamma/Adam"
        string_val: "BatchNorm_3/gamma/Adam_1"
        string_val: "BatchNorm_3/beta/Adam"
        string_val: "BatchNorm_3/beta/Adam_1"
        string_val: "conv_6/weights/Adam"
        string_val: "conv_6/weights/Adam_1"
        string_val: "conv_6/biases/Adam"
        string_val: "conv_6/biases/Adam_1"
        string_val: "BatchNorm_4/gamma/Adam"
        string_val: "BatchNorm_4/gamma/Adam_1"
        string_val: "BatchNorm_4/beta/Adam"
        string_val: "BatchNorm_4/beta/Adam_1"
        string_val: "conv_7/weights/Adam"
        string_val: "conv_7/weights/Adam_1"
        string_val: "conv_7/biases/Adam"
        string_val: "conv_7/biases/Adam_1"
        string_val: "BatchNorm_5/gamma/Adam"
        string_val: "BatchNorm_5/gamma/Adam_1"
        string_val: "BatchNorm_5/beta/Adam"
        string_val: "BatchNorm_5/beta/Adam_1"
        string_val: "conv_8/weights/Adam"
        string_val: "conv_8/weights/Adam_1"
        string_val: "conv_8/biases/Adam"
        string_val: "conv_8/biases/Adam_1"
        string_val: "BatchNorm_6/gamma/Adam"
        string_val: "BatchNorm_6/gamma/Adam_1"
        string_val: "BatchNorm_6/beta/Adam"
        string_val: "BatchNorm_6/beta/Adam_1"
        string_val: "conv_9/weights/Adam"
        string_val: "conv_9/weights/Adam_1"
        string_val: "conv_9/biases/Adam"
        string_val: "conv_9/biases/Adam_1"
        string_val: "BatchNorm_7/gamma/Adam"
        string_val: "BatchNorm_7/gamma/Adam_1"
        string_val: "BatchNorm_7/beta/Adam"
        string_val: "BatchNorm_7/beta/Adam_1"
        string_val: "conv_10/weights/Adam"
        string_val: "conv_10/weights/Adam_1"
        string_val: "conv_10/biases/Adam"
        string_val: "conv_10/biases/Adam_1"
        string_val: "BatchNorm_8/gamma/Adam"
        string_val: "BatchNorm_8/gamma/Adam_1"
        string_val: "BatchNorm_8/beta/Adam"
        string_val: "BatchNorm_8/beta/Adam_1"
        string_val: "conv_11/weights/Adam"
        string_val: "conv_11/weights/Adam_1"
        string_val: "conv_11/biases/Adam"
        string_val: "conv_11/biases/Adam_1"
        string_val: "BatchNorm_9/gamma/Adam"
        string_val: "BatchNorm_9/gamma/Adam_1"
        string_val: "BatchNorm_9/beta/Adam"
        string_val: "BatchNorm_9/beta/Adam_1"
        string_val: "conv_12/weights/Adam"
        string_val: "conv_12/weights/Adam_1"
        string_val: "conv_12/biases/Adam"
        string_val: "conv_12/biases/Adam_1"
        string_val: "BatchNorm_10/gamma/Adam"
        string_val: "BatchNorm_10/gamma/Adam_1"
        string_val: "BatchNorm_10/beta/Adam"
        string_val: "BatchNorm_10/beta/Adam_1"
        string_val: "conv_13/weights/Adam"
        string_val: "conv_13/weights/Adam_1"
        string_val: "conv_13/biases/Adam"
        string_val: "conv_13/biases/Adam_1"
        string_val: "BatchNorm_11/gamma/Adam"
        string_val: "BatchNorm_11/gamma/Adam_1"
        string_val: "BatchNorm_11/beta/Adam"
        string_val: "BatchNorm_11/beta/Adam_1"
        string_val: "conv_14/weights/Adam"
        string_val: "conv_14/weights/Adam_1"
        string_val: "conv_14/biases/Adam"
        string_val: "conv_14/biases/Adam_1"
        string_val: "BatchNorm_12/gamma/Adam"
        string_val: "BatchNorm_12/gamma/Adam_1"
        string_val: "BatchNorm_12/beta/Adam"
        string_val: "BatchNorm_12/beta/Adam_1"
        string_val: "conv_15/weights/Adam"
        string_val: "conv_15/weights/Adam_1"
        string_val: "conv_15/biases/Adam"
        string_val: "conv_15/biases/Adam_1"
        string_val: "BatchNorm_13/gamma/Adam"
        string_val: "BatchNorm_13/gamma/Adam_1"
        string_val: "BatchNorm_13/beta/Adam"
        string_val: "BatchNorm_13/beta/Adam_1"
        string_val: "conv_16/weights/Adam"
        string_val: "conv_16/weights/Adam_1"
        string_val: "conv_16/biases/Adam"
        string_val: "conv_16/biases/Adam_1"
        string_val: "BatchNorm_14/gamma/Adam"
        string_val: "BatchNorm_14/gamma/Adam_1"
        string_val: "BatchNorm_14/beta/Adam"
        string_val: "BatchNorm_14/beta/Adam_1"
        string_val: "conv_17/weights/Adam"
        string_val: "conv_17/weights/Adam_1"
        string_val: "conv_17/biases/Adam"
        string_val: "conv_17/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 225
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 225
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 225
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv_1/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv_2/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv_2/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "BatchNorm/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "conv_3/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "conv_3/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv_4/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv_4/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv_5/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv_5/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "conv_6/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "conv_6/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "conv_7/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "conv_7/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "conv_8/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "conv_8/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "conv_9/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "conv_9/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "conv_10/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "conv_10/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "conv_11/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "conv_11/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "conv_12/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "conv_12/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "conv_13/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "conv_13/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "conv_14/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "conv_14/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "conv_15/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "conv_15/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "conv_16/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "conv_16/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "conv_17/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "conv_17/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "conv_1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "conv_1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "conv_1/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "conv_1/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "conv_2/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "conv_2/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "conv_2/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "conv_2/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "BatchNorm/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "BatchNorm/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "conv_3/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "conv_3/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "conv_3/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "conv_3/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "BatchNorm_1/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "conv_4/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "conv_4/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "conv_4/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "conv_4/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "BatchNorm_2/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "conv_5/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "conv_5/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "conv_5/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "conv_5/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "BatchNorm_3/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "conv_6/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "conv_6/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "conv_6/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "conv_6/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "BatchNorm_4/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "conv_7/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "conv_7/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "conv_7/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "conv_7/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "BatchNorm_5/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "conv_8/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "conv_8/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "conv_8/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "conv_8/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "BatchNorm_6/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "conv_9/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "conv_9/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "conv_9/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "conv_9/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "BatchNorm_7/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "conv_10/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "conv_10/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "conv_10/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "conv_10/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "BatchNorm_8/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "conv_11/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "conv_11/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "conv_11/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "conv_11/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "BatchNorm_9/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "conv_12/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "conv_12/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "conv_12/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "conv_12/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "BatchNorm_10/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "conv_13/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "conv_13/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "conv_13/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "conv_13/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_196"
  op: "IsVariableInitialized"
  input: "BatchNorm_11/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_197"
  op: "IsVariableInitialized"
  input: "conv_14/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_198"
  op: "IsVariableInitialized"
  input: "conv_14/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_199"
  op: "IsVariableInitialized"
  input: "conv_14/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_200"
  op: "IsVariableInitialized"
  input: "conv_14/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_201"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_202"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_203"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_204"
  op: "IsVariableInitialized"
  input: "BatchNorm_12/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_205"
  op: "IsVariableInitialized"
  input: "conv_15/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_206"
  op: "IsVariableInitialized"
  input: "conv_15/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_207"
  op: "IsVariableInitialized"
  input: "conv_15/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_208"
  op: "IsVariableInitialized"
  input: "conv_15/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_209"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_210"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_211"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_212"
  op: "IsVariableInitialized"
  input: "BatchNorm_13/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_213"
  op: "IsVariableInitialized"
  input: "conv_16/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_214"
  op: "IsVariableInitialized"
  input: "conv_16/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_215"
  op: "IsVariableInitialized"
  input: "conv_16/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_216"
  op: "IsVariableInitialized"
  input: "conv_16/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_217"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_218"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_219"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_220"
  op: "IsVariableInitialized"
  input: "BatchNorm_14/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_221"
  op: "IsVariableInitialized"
  input: "conv_17/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_222"
  op: "IsVariableInitialized"
  input: "conv_17/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_223"
  op: "IsVariableInitialized"
  input: "conv_17/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_224"
  op: "IsVariableInitialized"
  input: "conv_17/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  input: "report_uninitialized_variables_1/IsVariableInitialized_46"
  input: "report_uninitialized_variables_1/IsVariableInitialized_47"
  input: "report_uninitialized_variables_1/IsVariableInitialized_48"
  input: "report_uninitialized_variables_1/IsVariableInitialized_49"
  input: "report_uninitialized_variables_1/IsVariableInitialized_50"
  input: "report_uninitialized_variables_1/IsVariableInitialized_51"
  input: "report_uninitialized_variables_1/IsVariableInitialized_52"
  input: "report_uninitialized_variables_1/IsVariableInitialized_53"
  input: "report_uninitialized_variables_1/IsVariableInitialized_54"
  input: "report_uninitialized_variables_1/IsVariableInitialized_55"
  input: "report_uninitialized_variables_1/IsVariableInitialized_56"
  input: "report_uninitialized_variables_1/IsVariableInitialized_57"
  input: "report_uninitialized_variables_1/IsVariableInitialized_58"
  input: "report_uninitialized_variables_1/IsVariableInitialized_59"
  input: "report_uninitialized_variables_1/IsVariableInitialized_60"
  input: "report_uninitialized_variables_1/IsVariableInitialized_61"
  input: "report_uninitialized_variables_1/IsVariableInitialized_62"
  input: "report_uninitialized_variables_1/IsVariableInitialized_63"
  input: "report_uninitialized_variables_1/IsVariableInitialized_64"
  input: "report_uninitialized_variables_1/IsVariableInitialized_65"
  input: "report_uninitialized_variables_1/IsVariableInitialized_66"
  input: "report_uninitialized_variables_1/IsVariableInitialized_67"
  input: "report_uninitialized_variables_1/IsVariableInitialized_68"
  input: "report_uninitialized_variables_1/IsVariableInitialized_69"
  input: "report_uninitialized_variables_1/IsVariableInitialized_70"
  input: "report_uninitialized_variables_1/IsVariableInitialized_71"
  input: "report_uninitialized_variables_1/IsVariableInitialized_72"
  input: "report_uninitialized_variables_1/IsVariableInitialized_73"
  input: "report_uninitialized_variables_1/IsVariableInitialized_74"
  input: "report_uninitialized_variables_1/IsVariableInitialized_75"
  input: "report_uninitialized_variables_1/IsVariableInitialized_76"
  input: "report_uninitialized_variables_1/IsVariableInitialized_77"
  input: "report_uninitialized_variables_1/IsVariableInitialized_78"
  input: "report_uninitialized_variables_1/IsVariableInitialized_79"
  input: "report_uninitialized_variables_1/IsVariableInitialized_80"
  input: "report_uninitialized_variables_1/IsVariableInitialized_81"
  input: "report_uninitialized_variables_1/IsVariableInitialized_82"
  input: "report_uninitialized_variables_1/IsVariableInitialized_83"
  input: "report_uninitialized_variables_1/IsVariableInitialized_84"
  input: "report_uninitialized_variables_1/IsVariableInitialized_85"
  input: "report_uninitialized_variables_1/IsVariableInitialized_86"
  input: "report_uninitialized_variables_1/IsVariableInitialized_87"
  input: "report_uninitialized_variables_1/IsVariableInitialized_88"
  input: "report_uninitialized_variables_1/IsVariableInitialized_89"
  input: "report_uninitialized_variables_1/IsVariableInitialized_90"
  input: "report_uninitialized_variables_1/IsVariableInitialized_91"
  input: "report_uninitialized_variables_1/IsVariableInitialized_92"
  input: "report_uninitialized_variables_1/IsVariableInitialized_93"
  input: "report_uninitialized_variables_1/IsVariableInitialized_94"
  input: "report_uninitialized_variables_1/IsVariableInitialized_95"
  input: "report_uninitialized_variables_1/IsVariableInitialized_96"
  input: "report_uninitialized_variables_1/IsVariableInitialized_97"
  input: "report_uninitialized_variables_1/IsVariableInitialized_98"
  input: "report_uninitialized_variables_1/IsVariableInitialized_99"
  input: "report_uninitialized_variables_1/IsVariableInitialized_100"
  input: "report_uninitialized_variables_1/IsVariableInitialized_101"
  input: "report_uninitialized_variables_1/IsVariableInitialized_102"
  input: "report_uninitialized_variables_1/IsVariableInitialized_103"
  input: "report_uninitialized_variables_1/IsVariableInitialized_104"
  input: "report_uninitialized_variables_1/IsVariableInitialized_105"
  input: "report_uninitialized_variables_1/IsVariableInitialized_106"
  input: "report_uninitialized_variables_1/IsVariableInitialized_107"
  input: "report_uninitialized_variables_1/IsVariableInitialized_108"
  input: "report_uninitialized_variables_1/IsVariableInitialized_109"
  input: "report_uninitialized_variables_1/IsVariableInitialized_110"
  input: "report_uninitialized_variables_1/IsVariableInitialized_111"
  input: "report_uninitialized_variables_1/IsVariableInitialized_112"
  input: "report_uninitialized_variables_1/IsVariableInitialized_113"
  input: "report_uninitialized_variables_1/IsVariableInitialized_114"
  input: "report_uninitialized_variables_1/IsVariableInitialized_115"
  input: "report_uninitialized_variables_1/IsVariableInitialized_116"
  input: "report_uninitialized_variables_1/IsVariableInitialized_117"
  input: "report_uninitialized_variables_1/IsVariableInitialized_118"
  input: "report_uninitialized_variables_1/IsVariableInitialized_119"
  input: "report_uninitialized_variables_1/IsVariableInitialized_120"
  input: "report_uninitialized_variables_1/IsVariableInitialized_121"
  input: "report_uninitialized_variables_1/IsVariableInitialized_122"
  input: "report_uninitialized_variables_1/IsVariableInitialized_123"
  input: "report_uninitialized_variables_1/IsVariableInitialized_124"
  input: "report_uninitialized_variables_1/IsVariableInitialized_125"
  input: "report_uninitialized_variables_1/IsVariableInitialized_126"
  input: "report_uninitialized_variables_1/IsVariableInitialized_127"
  input: "report_uninitialized_variables_1/IsVariableInitialized_128"
  input: "report_uninitialized_variables_1/IsVariableInitialized_129"
  input: "report_uninitialized_variables_1/IsVariableInitialized_130"
  input: "report_uninitialized_variables_1/IsVariableInitialized_131"
  input: "report_uninitialized_variables_1/IsVariableInitialized_132"
  input: "report_uninitialized_variables_1/IsVariableInitialized_133"
  input: "report_uninitialized_variables_1/IsVariableInitialized_134"
  input: "report_uninitialized_variables_1/IsVariableInitialized_135"
  input: "report_uninitialized_variables_1/IsVariableInitialized_136"
  input: "report_uninitialized_variables_1/IsVariableInitialized_137"
  input: "report_uninitialized_variables_1/IsVariableInitialized_138"
  input: "report_uninitialized_variables_1/IsVariableInitialized_139"
  input: "report_uninitialized_variables_1/IsVariableInitialized_140"
  input: "report_uninitialized_variables_1/IsVariableInitialized_141"
  input: "report_uninitialized_variables_1/IsVariableInitialized_142"
  input: "report_uninitialized_variables_1/IsVariableInitialized_143"
  input: "report_uninitialized_variables_1/IsVariableInitialized_144"
  input: "report_uninitialized_variables_1/IsVariableInitialized_145"
  input: "report_uninitialized_variables_1/IsVariableInitialized_146"
  input: "report_uninitialized_variables_1/IsVariableInitialized_147"
  input: "report_uninitialized_variables_1/IsVariableInitialized_148"
  input: "report_uninitialized_variables_1/IsVariableInitialized_149"
  input: "report_uninitialized_variables_1/IsVariableInitialized_150"
  input: "report_uninitialized_variables_1/IsVariableInitialized_151"
  input: "report_uninitialized_variables_1/IsVariableInitialized_152"
  input: "report_uninitialized_variables_1/IsVariableInitialized_153"
  input: "report_uninitialized_variables_1/IsVariableInitialized_154"
  input: "report_uninitialized_variables_1/IsVariableInitialized_155"
  input: "report_uninitialized_variables_1/IsVariableInitialized_156"
  input: "report_uninitialized_variables_1/IsVariableInitialized_157"
  input: "report_uninitialized_variables_1/IsVariableInitialized_158"
  input: "report_uninitialized_variables_1/IsVariableInitialized_159"
  input: "report_uninitialized_variables_1/IsVariableInitialized_160"
  input: "report_uninitialized_variables_1/IsVariableInitialized_161"
  input: "report_uninitialized_variables_1/IsVariableInitialized_162"
  input: "report_uninitialized_variables_1/IsVariableInitialized_163"
  input: "report_uninitialized_variables_1/IsVariableInitialized_164"
  input: "report_uninitialized_variables_1/IsVariableInitialized_165"
  input: "report_uninitialized_variables_1/IsVariableInitialized_166"
  input: "report_uninitialized_variables_1/IsVariableInitialized_167"
  input: "report_uninitialized_variables_1/IsVariableInitialized_168"
  input: "report_uninitialized_variables_1/IsVariableInitialized_169"
  input: "report_uninitialized_variables_1/IsVariableInitialized_170"
  input: "report_uninitialized_variables_1/IsVariableInitialized_171"
  input: "report_uninitialized_variables_1/IsVariableInitialized_172"
  input: "report_uninitialized_variables_1/IsVariableInitialized_173"
  input: "report_uninitialized_variables_1/IsVariableInitialized_174"
  input: "report_uninitialized_variables_1/IsVariableInitialized_175"
  input: "report_uninitialized_variables_1/IsVariableInitialized_176"
  input: "report_uninitialized_variables_1/IsVariableInitialized_177"
  input: "report_uninitialized_variables_1/IsVariableInitialized_178"
  input: "report_uninitialized_variables_1/IsVariableInitialized_179"
  input: "report_uninitialized_variables_1/IsVariableInitialized_180"
  input: "report_uninitialized_variables_1/IsVariableInitialized_181"
  input: "report_uninitialized_variables_1/IsVariableInitialized_182"
  input: "report_uninitialized_variables_1/IsVariableInitialized_183"
  input: "report_uninitialized_variables_1/IsVariableInitialized_184"
  input: "report_uninitialized_variables_1/IsVariableInitialized_185"
  input: "report_uninitialized_variables_1/IsVariableInitialized_186"
  input: "report_uninitialized_variables_1/IsVariableInitialized_187"
  input: "report_uninitialized_variables_1/IsVariableInitialized_188"
  input: "report_uninitialized_variables_1/IsVariableInitialized_189"
  input: "report_uninitialized_variables_1/IsVariableInitialized_190"
  input: "report_uninitialized_variables_1/IsVariableInitialized_191"
  input: "report_uninitialized_variables_1/IsVariableInitialized_192"
  input: "report_uninitialized_variables_1/IsVariableInitialized_193"
  input: "report_uninitialized_variables_1/IsVariableInitialized_194"
  input: "report_uninitialized_variables_1/IsVariableInitialized_195"
  input: "report_uninitialized_variables_1/IsVariableInitialized_196"
  input: "report_uninitialized_variables_1/IsVariableInitialized_197"
  input: "report_uninitialized_variables_1/IsVariableInitialized_198"
  input: "report_uninitialized_variables_1/IsVariableInitialized_199"
  input: "report_uninitialized_variables_1/IsVariableInitialized_200"
  input: "report_uninitialized_variables_1/IsVariableInitialized_201"
  input: "report_uninitialized_variables_1/IsVariableInitialized_202"
  input: "report_uninitialized_variables_1/IsVariableInitialized_203"
  input: "report_uninitialized_variables_1/IsVariableInitialized_204"
  input: "report_uninitialized_variables_1/IsVariableInitialized_205"
  input: "report_uninitialized_variables_1/IsVariableInitialized_206"
  input: "report_uninitialized_variables_1/IsVariableInitialized_207"
  input: "report_uninitialized_variables_1/IsVariableInitialized_208"
  input: "report_uninitialized_variables_1/IsVariableInitialized_209"
  input: "report_uninitialized_variables_1/IsVariableInitialized_210"
  input: "report_uninitialized_variables_1/IsVariableInitialized_211"
  input: "report_uninitialized_variables_1/IsVariableInitialized_212"
  input: "report_uninitialized_variables_1/IsVariableInitialized_213"
  input: "report_uninitialized_variables_1/IsVariableInitialized_214"
  input: "report_uninitialized_variables_1/IsVariableInitialized_215"
  input: "report_uninitialized_variables_1/IsVariableInitialized_216"
  input: "report_uninitialized_variables_1/IsVariableInitialized_217"
  input: "report_uninitialized_variables_1/IsVariableInitialized_218"
  input: "report_uninitialized_variables_1/IsVariableInitialized_219"
  input: "report_uninitialized_variables_1/IsVariableInitialized_220"
  input: "report_uninitialized_variables_1/IsVariableInitialized_221"
  input: "report_uninitialized_variables_1/IsVariableInitialized_222"
  input: "report_uninitialized_variables_1/IsVariableInitialized_223"
  input: "report_uninitialized_variables_1/IsVariableInitialized_224"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 225
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 225
          }
        }
        string_val: "global_step"
        string_val: "conv_1/weights"
        string_val: "conv_1/biases"
        string_val: "conv_2/weights"
        string_val: "conv_2/biases"
        string_val: "BatchNorm/gamma"
        string_val: "BatchNorm/beta"
        string_val: "BatchNorm/moving_mean"
        string_val: "BatchNorm/moving_variance"
        string_val: "conv_3/weights"
        string_val: "conv_3/biases"
        string_val: "BatchNorm_1/gamma"
        string_val: "BatchNorm_1/beta"
        string_val: "BatchNorm_1/moving_mean"
        string_val: "BatchNorm_1/moving_variance"
        string_val: "conv_4/weights"
        string_val: "conv_4/biases"
        string_val: "BatchNorm_2/gamma"
        string_val: "BatchNorm_2/beta"
        string_val: "BatchNorm_2/moving_mean"
        string_val: "BatchNorm_2/moving_variance"
        string_val: "conv_5/weights"
        string_val: "conv_5/biases"
        string_val: "BatchNorm_3/gamma"
        string_val: "BatchNorm_3/beta"
        string_val: "BatchNorm_3/moving_mean"
        string_val: "BatchNorm_3/moving_variance"
        string_val: "conv_6/weights"
        string_val: "conv_6/biases"
        string_val: "BatchNorm_4/gamma"
        string_val: "BatchNorm_4/beta"
        string_val: "BatchNorm_4/moving_mean"
        string_val: "BatchNorm_4/moving_variance"
        string_val: "conv_7/weights"
        string_val: "conv_7/biases"
        string_val: "BatchNorm_5/gamma"
        string_val: "BatchNorm_5/beta"
        string_val: "BatchNorm_5/moving_mean"
        string_val: "BatchNorm_5/moving_variance"
        string_val: "conv_8/weights"
        string_val: "conv_8/biases"
        string_val: "BatchNorm_6/gamma"
        string_val: "BatchNorm_6/beta"
        string_val: "BatchNorm_6/moving_mean"
        string_val: "BatchNorm_6/moving_variance"
        string_val: "conv_9/weights"
        string_val: "conv_9/biases"
        string_val: "BatchNorm_7/gamma"
        string_val: "BatchNorm_7/beta"
        string_val: "BatchNorm_7/moving_mean"
        string_val: "BatchNorm_7/moving_variance"
        string_val: "conv_10/weights"
        string_val: "conv_10/biases"
        string_val: "BatchNorm_8/gamma"
        string_val: "BatchNorm_8/beta"
        string_val: "BatchNorm_8/moving_mean"
        string_val: "BatchNorm_8/moving_variance"
        string_val: "conv_11/weights"
        string_val: "conv_11/biases"
        string_val: "BatchNorm_9/gamma"
        string_val: "BatchNorm_9/beta"
        string_val: "BatchNorm_9/moving_mean"
        string_val: "BatchNorm_9/moving_variance"
        string_val: "conv_12/weights"
        string_val: "conv_12/biases"
        string_val: "BatchNorm_10/gamma"
        string_val: "BatchNorm_10/beta"
        string_val: "BatchNorm_10/moving_mean"
        string_val: "BatchNorm_10/moving_variance"
        string_val: "conv_13/weights"
        string_val: "conv_13/biases"
        string_val: "BatchNorm_11/gamma"
        string_val: "BatchNorm_11/beta"
        string_val: "BatchNorm_11/moving_mean"
        string_val: "BatchNorm_11/moving_variance"
        string_val: "conv_14/weights"
        string_val: "conv_14/biases"
        string_val: "BatchNorm_12/gamma"
        string_val: "BatchNorm_12/beta"
        string_val: "BatchNorm_12/moving_mean"
        string_val: "BatchNorm_12/moving_variance"
        string_val: "conv_15/weights"
        string_val: "conv_15/biases"
        string_val: "BatchNorm_13/gamma"
        string_val: "BatchNorm_13/beta"
        string_val: "BatchNorm_13/moving_mean"
        string_val: "BatchNorm_13/moving_variance"
        string_val: "conv_16/weights"
        string_val: "conv_16/biases"
        string_val: "BatchNorm_14/gamma"
        string_val: "BatchNorm_14/beta"
        string_val: "BatchNorm_14/moving_mean"
        string_val: "BatchNorm_14/moving_variance"
        string_val: "conv_17/weights"
        string_val: "conv_17/biases"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv_1/weights/Adam"
        string_val: "conv_1/weights/Adam_1"
        string_val: "conv_1/biases/Adam"
        string_val: "conv_1/biases/Adam_1"
        string_val: "conv_2/weights/Adam"
        string_val: "conv_2/weights/Adam_1"
        string_val: "conv_2/biases/Adam"
        string_val: "conv_2/biases/Adam_1"
        string_val: "BatchNorm/gamma/Adam"
        string_val: "BatchNorm/gamma/Adam_1"
        string_val: "BatchNorm/beta/Adam"
        string_val: "BatchNorm/beta/Adam_1"
        string_val: "conv_3/weights/Adam"
        string_val: "conv_3/weights/Adam_1"
        string_val: "conv_3/biases/Adam"
        string_val: "conv_3/biases/Adam_1"
        string_val: "BatchNorm_1/gamma/Adam"
        string_val: "BatchNorm_1/gamma/Adam_1"
        string_val: "BatchNorm_1/beta/Adam"
        string_val: "BatchNorm_1/beta/Adam_1"
        string_val: "conv_4/weights/Adam"
        string_val: "conv_4/weights/Adam_1"
        string_val: "conv_4/biases/Adam"
        string_val: "conv_4/biases/Adam_1"
        string_val: "BatchNorm_2/gamma/Adam"
        string_val: "BatchNorm_2/gamma/Adam_1"
        string_val: "BatchNorm_2/beta/Adam"
        string_val: "BatchNorm_2/beta/Adam_1"
        string_val: "conv_5/weights/Adam"
        string_val: "conv_5/weights/Adam_1"
        string_val: "conv_5/biases/Adam"
        string_val: "conv_5/biases/Adam_1"
        string_val: "BatchNorm_3/gamma/Adam"
        string_val: "BatchNorm_3/gamma/Adam_1"
        string_val: "BatchNorm_3/beta/Adam"
        string_val: "BatchNorm_3/beta/Adam_1"
        string_val: "conv_6/weights/Adam"
        string_val: "conv_6/weights/Adam_1"
        string_val: "conv_6/biases/Adam"
        string_val: "conv_6/biases/Adam_1"
        string_val: "BatchNorm_4/gamma/Adam"
        string_val: "BatchNorm_4/gamma/Adam_1"
        string_val: "BatchNorm_4/beta/Adam"
        string_val: "BatchNorm_4/beta/Adam_1"
        string_val: "conv_7/weights/Adam"
        string_val: "conv_7/weights/Adam_1"
        string_val: "conv_7/biases/Adam"
        string_val: "conv_7/biases/Adam_1"
        string_val: "BatchNorm_5/gamma/Adam"
        string_val: "BatchNorm_5/gamma/Adam_1"
        string_val: "BatchNorm_5/beta/Adam"
        string_val: "BatchNorm_5/beta/Adam_1"
        string_val: "conv_8/weights/Adam"
        string_val: "conv_8/weights/Adam_1"
        string_val: "conv_8/biases/Adam"
        string_val: "conv_8/biases/Adam_1"
        string_val: "BatchNorm_6/gamma/Adam"
        string_val: "BatchNorm_6/gamma/Adam_1"
        string_val: "BatchNorm_6/beta/Adam"
        string_val: "BatchNorm_6/beta/Adam_1"
        string_val: "conv_9/weights/Adam"
        string_val: "conv_9/weights/Adam_1"
        string_val: "conv_9/biases/Adam"
        string_val: "conv_9/biases/Adam_1"
        string_val: "BatchNorm_7/gamma/Adam"
        string_val: "BatchNorm_7/gamma/Adam_1"
        string_val: "BatchNorm_7/beta/Adam"
        string_val: "BatchNorm_7/beta/Adam_1"
        string_val: "conv_10/weights/Adam"
        string_val: "conv_10/weights/Adam_1"
        string_val: "conv_10/biases/Adam"
        string_val: "conv_10/biases/Adam_1"
        string_val: "BatchNorm_8/gamma/Adam"
        string_val: "BatchNorm_8/gamma/Adam_1"
        string_val: "BatchNorm_8/beta/Adam"
        string_val: "BatchNorm_8/beta/Adam_1"
        string_val: "conv_11/weights/Adam"
        string_val: "conv_11/weights/Adam_1"
        string_val: "conv_11/biases/Adam"
        string_val: "conv_11/biases/Adam_1"
        string_val: "BatchNorm_9/gamma/Adam"
        string_val: "BatchNorm_9/gamma/Adam_1"
        string_val: "BatchNorm_9/beta/Adam"
        string_val: "BatchNorm_9/beta/Adam_1"
        string_val: "conv_12/weights/Adam"
        string_val: "conv_12/weights/Adam_1"
        string_val: "conv_12/biases/Adam"
        string_val: "conv_12/biases/Adam_1"
        string_val: "BatchNorm_10/gamma/Adam"
        string_val: "BatchNorm_10/gamma/Adam_1"
        string_val: "BatchNorm_10/beta/Adam"
        string_val: "BatchNorm_10/beta/Adam_1"
        string_val: "conv_13/weights/Adam"
        string_val: "conv_13/weights/Adam_1"
        string_val: "conv_13/biases/Adam"
        string_val: "conv_13/biases/Adam_1"
        string_val: "BatchNorm_11/gamma/Adam"
        string_val: "BatchNorm_11/gamma/Adam_1"
        string_val: "BatchNorm_11/beta/Adam"
        string_val: "BatchNorm_11/beta/Adam_1"
        string_val: "conv_14/weights/Adam"
        string_val: "conv_14/weights/Adam_1"
        string_val: "conv_14/biases/Adam"
        string_val: "conv_14/biases/Adam_1"
        string_val: "BatchNorm_12/gamma/Adam"
        string_val: "BatchNorm_12/gamma/Adam_1"
        string_val: "BatchNorm_12/beta/Adam"
        string_val: "BatchNorm_12/beta/Adam_1"
        string_val: "conv_15/weights/Adam"
        string_val: "conv_15/weights/Adam_1"
        string_val: "conv_15/biases/Adam"
        string_val: "conv_15/biases/Adam_1"
        string_val: "BatchNorm_13/gamma/Adam"
        string_val: "BatchNorm_13/gamma/Adam_1"
        string_val: "BatchNorm_13/beta/Adam"
        string_val: "BatchNorm_13/beta/Adam_1"
        string_val: "conv_16/weights/Adam"
        string_val: "conv_16/weights/Adam_1"
        string_val: "conv_16/biases/Adam"
        string_val: "conv_16/biases/Adam_1"
        string_val: "BatchNorm_14/gamma/Adam"
        string_val: "BatchNorm_14/gamma/Adam_1"
        string_val: "BatchNorm_14/beta/Adam"
        string_val: "BatchNorm_14/beta/Adam_1"
        string_val: "conv_17/weights/Adam"
        string_val: "conv_17/weights/Adam_1"
        string_val: "conv_17/biases/Adam"
        string_val: "conv_17/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 225
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 225
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 225
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge_1/MergeSummary"
  op: "MergeSummary"
  input: "input_producer/fraction_of_32_full"
  input: "cost/cost"
  input: "input_image/input_image"
  input: "noisy/noisy"
  input: "clear/clear"
  input: "learning_rate"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_6da69df1e454445894b22ca33edbb608/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 225
          }
        }
        string_val: "BatchNorm/beta"
        string_val: "BatchNorm/beta/Adam"
        string_val: "BatchNorm/beta/Adam_1"
        string_val: "BatchNorm/gamma"
        string_val: "BatchNorm/gamma/Adam"
        string_val: "BatchNorm/gamma/Adam_1"
        string_val: "BatchNorm/moving_mean"
        string_val: "BatchNorm/moving_variance"
        string_val: "BatchNorm_1/beta"
        string_val: "BatchNorm_1/beta/Adam"
        string_val: "BatchNorm_1/beta/Adam_1"
        string_val: "BatchNorm_1/gamma"
        string_val: "BatchNorm_1/gamma/Adam"
        string_val: "BatchNorm_1/gamma/Adam_1"
        string_val: "BatchNorm_1/moving_mean"
        string_val: "BatchNorm_1/moving_variance"
        string_val: "BatchNorm_10/beta"
        string_val: "BatchNorm_10/beta/Adam"
        string_val: "BatchNorm_10/beta/Adam_1"
        string_val: "BatchNorm_10/gamma"
        string_val: "BatchNorm_10/gamma/Adam"
        string_val: "BatchNorm_10/gamma/Adam_1"
        string_val: "BatchNorm_10/moving_mean"
        string_val: "BatchNorm_10/moving_variance"
        string_val: "BatchNorm_11/beta"
        string_val: "BatchNorm_11/beta/Adam"
        string_val: "BatchNorm_11/beta/Adam_1"
        string_val: "BatchNorm_11/gamma"
        string_val: "BatchNorm_11/gamma/Adam"
        string_val: "BatchNorm_11/gamma/Adam_1"
        string_val: "BatchNorm_11/moving_mean"
        string_val: "BatchNorm_11/moving_variance"
        string_val: "BatchNorm_12/beta"
        string_val: "BatchNorm_12/beta/Adam"
        string_val: "BatchNorm_12/beta/Adam_1"
        string_val: "BatchNorm_12/gamma"
        string_val: "BatchNorm_12/gamma/Adam"
        string_val: "BatchNorm_12/gamma/Adam_1"
        string_val: "BatchNorm_12/moving_mean"
        string_val: "BatchNorm_12/moving_variance"
        string_val: "BatchNorm_13/beta"
        string_val: "BatchNorm_13/beta/Adam"
        string_val: "BatchNorm_13/beta/Adam_1"
        string_val: "BatchNorm_13/gamma"
        string_val: "BatchNorm_13/gamma/Adam"
        string_val: "BatchNorm_13/gamma/Adam_1"
        string_val: "BatchNorm_13/moving_mean"
        string_val: "BatchNorm_13/moving_variance"
        string_val: "BatchNorm_14/beta"
        string_val: "BatchNorm_14/beta/Adam"
        string_val: "BatchNorm_14/beta/Adam_1"
        string_val: "BatchNorm_14/gamma"
        string_val: "BatchNorm_14/gamma/Adam"
        string_val: "BatchNorm_14/gamma/Adam_1"
        string_val: "BatchNorm_14/moving_mean"
        string_val: "BatchNorm_14/moving_variance"
        string_val: "BatchNorm_2/beta"
        string_val: "BatchNorm_2/beta/Adam"
        string_val: "BatchNorm_2/beta/Adam_1"
        string_val: "BatchNorm_2/gamma"
        string_val: "BatchNorm_2/gamma/Adam"
        string_val: "BatchNorm_2/gamma/Adam_1"
        string_val: "BatchNorm_2/moving_mean"
        string_val: "BatchNorm_2/moving_variance"
        string_val: "BatchNorm_3/beta"
        string_val: "BatchNorm_3/beta/Adam"
        string_val: "BatchNorm_3/beta/Adam_1"
        string_val: "BatchNorm_3/gamma"
        string_val: "BatchNorm_3/gamma/Adam"
        string_val: "BatchNorm_3/gamma/Adam_1"
        string_val: "BatchNorm_3/moving_mean"
        string_val: "BatchNorm_3/moving_variance"
        string_val: "BatchNorm_4/beta"
        string_val: "BatchNorm_4/beta/Adam"
        string_val: "BatchNorm_4/beta/Adam_1"
        string_val: "BatchNorm_4/gamma"
        string_val: "BatchNorm_4/gamma/Adam"
        string_val: "BatchNorm_4/gamma/Adam_1"
        string_val: "BatchNorm_4/moving_mean"
        string_val: "BatchNorm_4/moving_variance"
        string_val: "BatchNorm_5/beta"
        string_val: "BatchNorm_5/beta/Adam"
        string_val: "BatchNorm_5/beta/Adam_1"
        string_val: "BatchNorm_5/gamma"
        string_val: "BatchNorm_5/gamma/Adam"
        string_val: "BatchNorm_5/gamma/Adam_1"
        string_val: "BatchNorm_5/moving_mean"
        string_val: "BatchNorm_5/moving_variance"
        string_val: "BatchNorm_6/beta"
        string_val: "BatchNorm_6/beta/Adam"
        string_val: "BatchNorm_6/beta/Adam_1"
        string_val: "BatchNorm_6/gamma"
        string_val: "BatchNorm_6/gamma/Adam"
        string_val: "BatchNorm_6/gamma/Adam_1"
        string_val: "BatchNorm_6/moving_mean"
        string_val: "BatchNorm_6/moving_variance"
        string_val: "BatchNorm_7/beta"
        string_val: "BatchNorm_7/beta/Adam"
        string_val: "BatchNorm_7/beta/Adam_1"
        string_val: "BatchNorm_7/gamma"
        string_val: "BatchNorm_7/gamma/Adam"
        string_val: "BatchNorm_7/gamma/Adam_1"
        string_val: "BatchNorm_7/moving_mean"
        string_val: "BatchNorm_7/moving_variance"
        string_val: "BatchNorm_8/beta"
        string_val: "BatchNorm_8/beta/Adam"
        string_val: "BatchNorm_8/beta/Adam_1"
        string_val: "BatchNorm_8/gamma"
        string_val: "BatchNorm_8/gamma/Adam"
        string_val: "BatchNorm_8/gamma/Adam_1"
        string_val: "BatchNorm_8/moving_mean"
        string_val: "BatchNorm_8/moving_variance"
        string_val: "BatchNorm_9/beta"
        string_val: "BatchNorm_9/beta/Adam"
        string_val: "BatchNorm_9/beta/Adam_1"
        string_val: "BatchNorm_9/gamma"
        string_val: "BatchNorm_9/gamma/Adam"
        string_val: "BatchNorm_9/gamma/Adam_1"
        string_val: "BatchNorm_9/moving_mean"
        string_val: "BatchNorm_9/moving_variance"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv_1/biases"
        string_val: "conv_1/biases/Adam"
        string_val: "conv_1/biases/Adam_1"
        string_val: "conv_1/weights"
        string_val: "conv_1/weights/Adam"
        string_val: "conv_1/weights/Adam_1"
        string_val: "conv_10/biases"
        string_val: "conv_10/biases/Adam"
        string_val: "conv_10/biases/Adam_1"
        string_val: "conv_10/weights"
        string_val: "conv_10/weights/Adam"
        string_val: "conv_10/weights/Adam_1"
        string_val: "conv_11/biases"
        string_val: "conv_11/biases/Adam"
        string_val: "conv_11/biases/Adam_1"
        string_val: "conv_11/weights"
        string_val: "conv_11/weights/Adam"
        string_val: "conv_11/weights/Adam_1"
        string_val: "conv_12/biases"
        string_val: "conv_12/biases/Adam"
        string_val: "conv_12/biases/Adam_1"
        string_val: "conv_12/weights"
        string_val: "conv_12/weights/Adam"
        string_val: "conv_12/weights/Adam_1"
        string_val: "conv_13/biases"
        string_val: "conv_13/biases/Adam"
        string_val: "conv_13/biases/Adam_1"
        string_val: "conv_13/weights"
        string_val: "conv_13/weights/Adam"
        string_val: "conv_13/weights/Adam_1"
        string_val: "conv_14/biases"
        string_val: "conv_14/biases/Adam"
        string_val: "conv_14/biases/Adam_1"
        string_val: "conv_14/weights"
        string_val: "conv_14/weights/Adam"
        string_val: "conv_14/weights/Adam_1"
        string_val: "conv_15/biases"
        string_val: "conv_15/biases/Adam"
        string_val: "conv_15/biases/Adam_1"
        string_val: "conv_15/weights"
        string_val: "conv_15/weights/Adam"
        string_val: "conv_15/weights/Adam_1"
        string_val: "conv_16/biases"
        string_val: "conv_16/biases/Adam"
        string_val: "conv_16/biases/Adam_1"
        string_val: "conv_16/weights"
        string_val: "conv_16/weights/Adam"
        string_val: "conv_16/weights/Adam_1"
        string_val: "conv_17/biases"
        string_val: "conv_17/biases/Adam"
        string_val: "conv_17/biases/Adam_1"
        string_val: "conv_17/weights"
        string_val: "conv_17/weights/Adam"
        string_val: "conv_17/weights/Adam_1"
        string_val: "conv_2/biases"
        string_val: "conv_2/biases/Adam"
        string_val: "conv_2/biases/Adam_1"
        string_val: "conv_2/weights"
        string_val: "conv_2/weights/Adam"
        string_val: "conv_2/weights/Adam_1"
        string_val: "conv_3/biases"
        string_val: "conv_3/biases/Adam"
        string_val: "conv_3/biases/Adam_1"
        string_val: "conv_3/weights"
        string_val: "conv_3/weights/Adam"
        string_val: "conv_3/weights/Adam_1"
        string_val: "conv_4/biases"
        string_val: "conv_4/biases/Adam"
        string_val: "conv_4/biases/Adam_1"
        string_val: "conv_4/weights"
        string_val: "conv_4/weights/Adam"
        string_val: "conv_4/weights/Adam_1"
        string_val: "conv_5/biases"
        string_val: "conv_5/biases/Adam"
        string_val: "conv_5/biases/Adam_1"
        string_val: "conv_5/weights"
        string_val: "conv_5/weights/Adam"
        string_val: "conv_5/weights/Adam_1"
        string_val: "conv_6/biases"
        string_val: "conv_6/biases/Adam"
        string_val: "conv_6/biases/Adam_1"
        string_val: "conv_6/weights"
        string_val: "conv_6/weights/Adam"
        string_val: "conv_6/weights/Adam_1"
        string_val: "conv_7/biases"
        string_val: "conv_7/biases/Adam"
        string_val: "conv_7/biases/Adam_1"
        string_val: "conv_7/weights"
        string_val: "conv_7/weights/Adam"
        string_val: "conv_7/weights/Adam_1"
        string_val: "conv_8/biases"
        string_val: "conv_8/biases/Adam"
        string_val: "conv_8/biases/Adam_1"
        string_val: "conv_8/weights"
        string_val: "conv_8/weights/Adam"
        string_val: "conv_8/weights/Adam_1"
        string_val: "conv_9/biases"
        string_val: "conv_9/biases/Adam"
        string_val: "conv_9/biases/Adam_1"
        string_val: "conv_9/weights"
        string_val: "conv_9/weights/Adam"
        string_val: "conv_9/weights/Adam_1"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 225
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "BatchNorm/beta"
  input: "BatchNorm/beta/Adam"
  input: "BatchNorm/beta/Adam_1"
  input: "BatchNorm/gamma"
  input: "BatchNorm/gamma/Adam"
  input: "BatchNorm/gamma/Adam_1"
  input: "BatchNorm/moving_mean"
  input: "BatchNorm/moving_variance"
  input: "BatchNorm_1/beta"
  input: "BatchNorm_1/beta/Adam"
  input: "BatchNorm_1/beta/Adam_1"
  input: "BatchNorm_1/gamma"
  input: "BatchNorm_1/gamma/Adam"
  input: "BatchNorm_1/gamma/Adam_1"
  input: "BatchNorm_1/moving_mean"
  input: "BatchNorm_1/moving_variance"
  input: "BatchNorm_10/beta"
  input: "BatchNorm_10/beta/Adam"
  input: "BatchNorm_10/beta/Adam_1"
  input: "BatchNorm_10/gamma"
  input: "BatchNorm_10/gamma/Adam"
  input: "BatchNorm_10/gamma/Adam_1"
  input: "BatchNorm_10/moving_mean"
  input: "BatchNorm_10/moving_variance"
  input: "BatchNorm_11/beta"
  input: "BatchNorm_11/beta/Adam"
  input: "BatchNorm_11/beta/Adam_1"
  input: "BatchNorm_11/gamma"
  input: "BatchNorm_11/gamma/Adam"
  input: "BatchNorm_11/gamma/Adam_1"
  input: "BatchNorm_11/moving_mean"
  input: "BatchNorm_11/moving_variance"
  input: "BatchNorm_12/beta"
  input: "BatchNorm_12/beta/Adam"
  input: "BatchNorm_12/beta/Adam_1"
  input: "BatchNorm_12/gamma"
  input: "BatchNorm_12/gamma/Adam"
  input: "BatchNorm_12/gamma/Adam_1"
  input: "BatchNorm_12/moving_mean"
  input: "BatchNorm_12/moving_variance"
  input: "BatchNorm_13/beta"
  input: "BatchNorm_13/beta/Adam"
  input: "BatchNorm_13/beta/Adam_1"
  input: "BatchNorm_13/gamma"
  input: "BatchNorm_13/gamma/Adam"
  input: "BatchNorm_13/gamma/Adam_1"
  input: "BatchNorm_13/moving_mean"
  input: "BatchNorm_13/moving_variance"
  input: "BatchNorm_14/beta"
  input: "BatchNorm_14/beta/Adam"
  input: "BatchNorm_14/beta/Adam_1"
  input: "BatchNorm_14/gamma"
  input: "BatchNorm_14/gamma/Adam"
  input: "BatchNorm_14/gamma/Adam_1"
  input: "BatchNorm_14/moving_mean"
  input: "BatchNorm_14/moving_variance"
  input: "BatchNorm_2/beta"
  input: "BatchNorm_2/beta/Adam"
  input: "BatchNorm_2/beta/Adam_1"
  input: "BatchNorm_2/gamma"
  input: "BatchNorm_2/gamma/Adam"
  input: "BatchNorm_2/gamma/Adam_1"
  input: "BatchNorm_2/moving_mean"
  input: "BatchNorm_2/moving_variance"
  input: "BatchNorm_3/beta"
  input: "BatchNorm_3/beta/Adam"
  input: "BatchNorm_3/beta/Adam_1"
  input: "BatchNorm_3/gamma"
  input: "BatchNorm_3/gamma/Adam"
  input: "BatchNorm_3/gamma/Adam_1"
  input: "BatchNorm_3/moving_mean"
  input: "BatchNorm_3/moving_variance"
  input: "BatchNorm_4/beta"
  input: "BatchNorm_4/beta/Adam"
  input: "BatchNorm_4/beta/Adam_1"
  input: "BatchNorm_4/gamma"
  input: "BatchNorm_4/gamma/Adam"
  input: "BatchNorm_4/gamma/Adam_1"
  input: "BatchNorm_4/moving_mean"
  input: "BatchNorm_4/moving_variance"
  input: "BatchNorm_5/beta"
  input: "BatchNorm_5/beta/Adam"
  input: "BatchNorm_5/beta/Adam_1"
  input: "BatchNorm_5/gamma"
  input: "BatchNorm_5/gamma/Adam"
  input: "BatchNorm_5/gamma/Adam_1"
  input: "BatchNorm_5/moving_mean"
  input: "BatchNorm_5/moving_variance"
  input: "BatchNorm_6/beta"
  input: "BatchNorm_6/beta/Adam"
  input: "BatchNorm_6/beta/Adam_1"
  input: "BatchNorm_6/gamma"
  input: "BatchNorm_6/gamma/Adam"
  input: "BatchNorm_6/gamma/Adam_1"
  input: "BatchNorm_6/moving_mean"
  input: "BatchNorm_6/moving_variance"
  input: "BatchNorm_7/beta"
  input: "BatchNorm_7/beta/Adam"
  input: "BatchNorm_7/beta/Adam_1"
  input: "BatchNorm_7/gamma"
  input: "BatchNorm_7/gamma/Adam"
  input: "BatchNorm_7/gamma/Adam_1"
  input: "BatchNorm_7/moving_mean"
  input: "BatchNorm_7/moving_variance"
  input: "BatchNorm_8/beta"
  input: "BatchNorm_8/beta/Adam"
  input: "BatchNorm_8/beta/Adam_1"
  input: "BatchNorm_8/gamma"
  input: "BatchNorm_8/gamma/Adam"
  input: "BatchNorm_8/gamma/Adam_1"
  input: "BatchNorm_8/moving_mean"
  input: "BatchNorm_8/moving_variance"
  input: "BatchNorm_9/beta"
  input: "BatchNorm_9/beta/Adam"
  input: "BatchNorm_9/beta/Adam_1"
  input: "BatchNorm_9/gamma"
  input: "BatchNorm_9/gamma/Adam"
  input: "BatchNorm_9/gamma/Adam_1"
  input: "BatchNorm_9/moving_mean"
  input: "BatchNorm_9/moving_variance"
  input: "beta1_power"
  input: "beta2_power"
  input: "conv_1/biases"
  input: "conv_1/biases/Adam"
  input: "conv_1/biases/Adam_1"
  input: "conv_1/weights"
  input: "conv_1/weights/Adam"
  input: "conv_1/weights/Adam_1"
  input: "conv_10/biases"
  input: "conv_10/biases/Adam"
  input: "conv_10/biases/Adam_1"
  input: "conv_10/weights"
  input: "conv_10/weights/Adam"
  input: "conv_10/weights/Adam_1"
  input: "conv_11/biases"
  input: "conv_11/biases/Adam"
  input: "conv_11/biases/Adam_1"
  input: "conv_11/weights"
  input: "conv_11/weights/Adam"
  input: "conv_11/weights/Adam_1"
  input: "conv_12/biases"
  input: "conv_12/biases/Adam"
  input: "conv_12/biases/Adam_1"
  input: "conv_12/weights"
  input: "conv_12/weights/Adam"
  input: "conv_12/weights/Adam_1"
  input: "conv_13/biases"
  input: "conv_13/biases/Adam"
  input: "conv_13/biases/Adam_1"
  input: "conv_13/weights"
  input: "conv_13/weights/Adam"
  input: "conv_13/weights/Adam_1"
  input: "conv_14/biases"
  input: "conv_14/biases/Adam"
  input: "conv_14/biases/Adam_1"
  input: "conv_14/weights"
  input: "conv_14/weights/Adam"
  input: "conv_14/weights/Adam_1"
  input: "conv_15/biases"
  input: "conv_15/biases/Adam"
  input: "conv_15/biases/Adam_1"
  input: "conv_15/weights"
  input: "conv_15/weights/Adam"
  input: "conv_15/weights/Adam_1"
  input: "conv_16/biases"
  input: "conv_16/biases/Adam"
  input: "conv_16/biases/Adam_1"
  input: "conv_16/weights"
  input: "conv_16/weights/Adam"
  input: "conv_16/weights/Adam_1"
  input: "conv_17/biases"
  input: "conv_17/biases/Adam"
  input: "conv_17/biases/Adam_1"
  input: "conv_17/weights"
  input: "conv_17/weights/Adam"
  input: "conv_17/weights/Adam_1"
  input: "conv_2/biases"
  input: "conv_2/biases/Adam"
  input: "conv_2/biases/Adam_1"
  input: "conv_2/weights"
  input: "conv_2/weights/Adam"
  input: "conv_2/weights/Adam_1"
  input: "conv_3/biases"
  input: "conv_3/biases/Adam"
  input: "conv_3/biases/Adam_1"
  input: "conv_3/weights"
  input: "conv_3/weights/Adam"
  input: "conv_3/weights/Adam_1"
  input: "conv_4/biases"
  input: "conv_4/biases/Adam"
  input: "conv_4/biases/Adam_1"
  input: "conv_4/weights"
  input: "conv_4/weights/Adam"
  input: "conv_4/weights/Adam_1"
  input: "conv_5/biases"
  input: "conv_5/biases/Adam"
  input: "conv_5/biases/Adam_1"
  input: "conv_5/weights"
  input: "conv_5/weights/Adam"
  input: "conv_5/weights/Adam_1"
  input: "conv_6/biases"
  input: "conv_6/biases/Adam"
  input: "conv_6/biases/Adam_1"
  input: "conv_6/weights"
  input: "conv_6/weights/Adam"
  input: "conv_6/weights/Adam_1"
  input: "conv_7/biases"
  input: "conv_7/biases/Adam"
  input: "conv_7/biases/Adam_1"
  input: "conv_7/weights"
  input: "conv_7/weights/Adam"
  input: "conv_7/weights/Adam_1"
  input: "conv_8/biases"
  input: "conv_8/biases/Adam"
  input: "conv_8/biases/Adam_1"
  input: "conv_8/weights"
  input: "conv_8/weights/Adam"
  input: "conv_8/weights/Adam_1"
  input: "conv_9/biases"
  input: "conv_9/biases/Adam"
  input: "conv_9/biases/Adam_1"
  input: "conv_9/weights"
  input: "conv_9/weights/Adam"
  input: "conv_9/weights/Adam_1"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 225
          }
        }
        string_val: "BatchNorm/beta"
        string_val: "BatchNorm/beta/Adam"
        string_val: "BatchNorm/beta/Adam_1"
        string_val: "BatchNorm/gamma"
        string_val: "BatchNorm/gamma/Adam"
        string_val: "BatchNorm/gamma/Adam_1"
        string_val: "BatchNorm/moving_mean"
        string_val: "BatchNorm/moving_variance"
        string_val: "BatchNorm_1/beta"
        string_val: "BatchNorm_1/beta/Adam"
        string_val: "BatchNorm_1/beta/Adam_1"
        string_val: "BatchNorm_1/gamma"
        string_val: "BatchNorm_1/gamma/Adam"
        string_val: "BatchNorm_1/gamma/Adam_1"
        string_val: "BatchNorm_1/moving_mean"
        string_val: "BatchNorm_1/moving_variance"
        string_val: "BatchNorm_10/beta"
        string_val: "BatchNorm_10/beta/Adam"
        string_val: "BatchNorm_10/beta/Adam_1"
        string_val: "BatchNorm_10/gamma"
        string_val: "BatchNorm_10/gamma/Adam"
        string_val: "BatchNorm_10/gamma/Adam_1"
        string_val: "BatchNorm_10/moving_mean"
        string_val: "BatchNorm_10/moving_variance"
        string_val: "BatchNorm_11/beta"
        string_val: "BatchNorm_11/beta/Adam"
        string_val: "BatchNorm_11/beta/Adam_1"
        string_val: "BatchNorm_11/gamma"
        string_val: "BatchNorm_11/gamma/Adam"
        string_val: "BatchNorm_11/gamma/Adam_1"
        string_val: "BatchNorm_11/moving_mean"
        string_val: "BatchNorm_11/moving_variance"
        string_val: "BatchNorm_12/beta"
        string_val: "BatchNorm_12/beta/Adam"
        string_val: "BatchNorm_12/beta/Adam_1"
        string_val: "BatchNorm_12/gamma"
        string_val: "BatchNorm_12/gamma/Adam"
        string_val: "BatchNorm_12/gamma/Adam_1"
        string_val: "BatchNorm_12/moving_mean"
        string_val: "BatchNorm_12/moving_variance"
        string_val: "BatchNorm_13/beta"
        string_val: "BatchNorm_13/beta/Adam"
        string_val: "BatchNorm_13/beta/Adam_1"
        string_val: "BatchNorm_13/gamma"
        string_val: "BatchNorm_13/gamma/Adam"
        string_val: "BatchNorm_13/gamma/Adam_1"
        string_val: "BatchNorm_13/moving_mean"
        string_val: "BatchNorm_13/moving_variance"
        string_val: "BatchNorm_14/beta"
        string_val: "BatchNorm_14/beta/Adam"
        string_val: "BatchNorm_14/beta/Adam_1"
        string_val: "BatchNorm_14/gamma"
        string_val: "BatchNorm_14/gamma/Adam"
        string_val: "BatchNorm_14/gamma/Adam_1"
        string_val: "BatchNorm_14/moving_mean"
        string_val: "BatchNorm_14/moving_variance"
        string_val: "BatchNorm_2/beta"
        string_val: "BatchNorm_2/beta/Adam"
        string_val: "BatchNorm_2/beta/Adam_1"
        string_val: "BatchNorm_2/gamma"
        string_val: "BatchNorm_2/gamma/Adam"
        string_val: "BatchNorm_2/gamma/Adam_1"
        string_val: "BatchNorm_2/moving_mean"
        string_val: "BatchNorm_2/moving_variance"
        string_val: "BatchNorm_3/beta"
        string_val: "BatchNorm_3/beta/Adam"
        string_val: "BatchNorm_3/beta/Adam_1"
        string_val: "BatchNorm_3/gamma"
        string_val: "BatchNorm_3/gamma/Adam"
        string_val: "BatchNorm_3/gamma/Adam_1"
        string_val: "BatchNorm_3/moving_mean"
        string_val: "BatchNorm_3/moving_variance"
        string_val: "BatchNorm_4/beta"
        string_val: "BatchNorm_4/beta/Adam"
        string_val: "BatchNorm_4/beta/Adam_1"
        string_val: "BatchNorm_4/gamma"
        string_val: "BatchNorm_4/gamma/Adam"
        string_val: "BatchNorm_4/gamma/Adam_1"
        string_val: "BatchNorm_4/moving_mean"
        string_val: "BatchNorm_4/moving_variance"
        string_val: "BatchNorm_5/beta"
        string_val: "BatchNorm_5/beta/Adam"
        string_val: "BatchNorm_5/beta/Adam_1"
        string_val: "BatchNorm_5/gamma"
        string_val: "BatchNorm_5/gamma/Adam"
        string_val: "BatchNorm_5/gamma/Adam_1"
        string_val: "BatchNorm_5/moving_mean"
        string_val: "BatchNorm_5/moving_variance"
        string_val: "BatchNorm_6/beta"
        string_val: "BatchNorm_6/beta/Adam"
        string_val: "BatchNorm_6/beta/Adam_1"
        string_val: "BatchNorm_6/gamma"
        string_val: "BatchNorm_6/gamma/Adam"
        string_val: "BatchNorm_6/gamma/Adam_1"
        string_val: "BatchNorm_6/moving_mean"
        string_val: "BatchNorm_6/moving_variance"
        string_val: "BatchNorm_7/beta"
        string_val: "BatchNorm_7/beta/Adam"
        string_val: "BatchNorm_7/beta/Adam_1"
        string_val: "BatchNorm_7/gamma"
        string_val: "BatchNorm_7/gamma/Adam"
        string_val: "BatchNorm_7/gamma/Adam_1"
        string_val: "BatchNorm_7/moving_mean"
        string_val: "BatchNorm_7/moving_variance"
        string_val: "BatchNorm_8/beta"
        string_val: "BatchNorm_8/beta/Adam"
        string_val: "BatchNorm_8/beta/Adam_1"
        string_val: "BatchNorm_8/gamma"
        string_val: "BatchNorm_8/gamma/Adam"
        string_val: "BatchNorm_8/gamma/Adam_1"
        string_val: "BatchNorm_8/moving_mean"
        string_val: "BatchNorm_8/moving_variance"
        string_val: "BatchNorm_9/beta"
        string_val: "BatchNorm_9/beta/Adam"
        string_val: "BatchNorm_9/beta/Adam_1"
        string_val: "BatchNorm_9/gamma"
        string_val: "BatchNorm_9/gamma/Adam"
        string_val: "BatchNorm_9/gamma/Adam_1"
        string_val: "BatchNorm_9/moving_mean"
        string_val: "BatchNorm_9/moving_variance"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv_1/biases"
        string_val: "conv_1/biases/Adam"
        string_val: "conv_1/biases/Adam_1"
        string_val: "conv_1/weights"
        string_val: "conv_1/weights/Adam"
        string_val: "conv_1/weights/Adam_1"
        string_val: "conv_10/biases"
        string_val: "conv_10/biases/Adam"
        string_val: "conv_10/biases/Adam_1"
        string_val: "conv_10/weights"
        string_val: "conv_10/weights/Adam"
        string_val: "conv_10/weights/Adam_1"
        string_val: "conv_11/biases"
        string_val: "conv_11/biases/Adam"
        string_val: "conv_11/biases/Adam_1"
        string_val: "conv_11/weights"
        string_val: "conv_11/weights/Adam"
        string_val: "conv_11/weights/Adam_1"
        string_val: "conv_12/biases"
        string_val: "conv_12/biases/Adam"
        string_val: "conv_12/biases/Adam_1"
        string_val: "conv_12/weights"
        string_val: "conv_12/weights/Adam"
        string_val: "conv_12/weights/Adam_1"
        string_val: "conv_13/biases"
        string_val: "conv_13/biases/Adam"
        string_val: "conv_13/biases/Adam_1"
        string_val: "conv_13/weights"
        string_val: "conv_13/weights/Adam"
        string_val: "conv_13/weights/Adam_1"
        string_val: "conv_14/biases"
        string_val: "conv_14/biases/Adam"
        string_val: "conv_14/biases/Adam_1"
        string_val: "conv_14/weights"
        string_val: "conv_14/weights/Adam"
        string_val: "conv_14/weights/Adam_1"
        string_val: "conv_15/biases"
        string_val: "conv_15/biases/Adam"
        string_val: "conv_15/biases/Adam_1"
        string_val: "conv_15/weights"
        string_val: "conv_15/weights/Adam"
        string_val: "conv_15/weights/Adam_1"
        string_val: "conv_16/biases"
        string_val: "conv_16/biases/Adam"
        string_val: "conv_16/biases/Adam_1"
        string_val: "conv_16/weights"
        string_val: "conv_16/weights/Adam"
        string_val: "conv_16/weights/Adam_1"
        string_val: "conv_17/biases"
        string_val: "conv_17/biases/Adam"
        string_val: "conv_17/biases/Adam_1"
        string_val: "conv_17/weights"
        string_val: "conv_17/weights/Adam"
        string_val: "conv_17/weights/Adam_1"
        string_val: "conv_2/biases"
        string_val: "conv_2/biases/Adam"
        string_val: "conv_2/biases/Adam_1"
        string_val: "conv_2/weights"
        string_val: "conv_2/weights/Adam"
        string_val: "conv_2/weights/Adam_1"
        string_val: "conv_3/biases"
        string_val: "conv_3/biases/Adam"
        string_val: "conv_3/biases/Adam_1"
        string_val: "conv_3/weights"
        string_val: "conv_3/weights/Adam"
        string_val: "conv_3/weights/Adam_1"
        string_val: "conv_4/biases"
        string_val: "conv_4/biases/Adam"
        string_val: "conv_4/biases/Adam_1"
        string_val: "conv_4/weights"
        string_val: "conv_4/weights/Adam"
        string_val: "conv_4/weights/Adam_1"
        string_val: "conv_5/biases"
        string_val: "conv_5/biases/Adam"
        string_val: "conv_5/biases/Adam_1"
        string_val: "conv_5/weights"
        string_val: "conv_5/weights/Adam"
        string_val: "conv_5/weights/Adam_1"
        string_val: "conv_6/biases"
        string_val: "conv_6/biases/Adam"
        string_val: "conv_6/biases/Adam_1"
        string_val: "conv_6/weights"
        string_val: "conv_6/weights/Adam"
        string_val: "conv_6/weights/Adam_1"
        string_val: "conv_7/biases"
        string_val: "conv_7/biases/Adam"
        string_val: "conv_7/biases/Adam_1"
        string_val: "conv_7/weights"
        string_val: "conv_7/weights/Adam"
        string_val: "conv_7/weights/Adam_1"
        string_val: "conv_8/biases"
        string_val: "conv_8/biases/Adam"
        string_val: "conv_8/biases/Adam_1"
        string_val: "conv_8/weights"
        string_val: "conv_8/weights/Adam"
        string_val: "conv_8/weights/Adam_1"
        string_val: "conv_9/biases"
        string_val: "conv_9/biases/Adam"
        string_val: "conv_9/biases/Adam_1"
        string_val: "conv_9/weights"
        string_val: "conv_9/weights/Adam"
        string_val: "conv_9/weights/Adam_1"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 225
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 225
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "BatchNorm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "BatchNorm/beta/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "BatchNorm/gamma"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "BatchNorm/gamma/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "BatchNorm/gamma/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "BatchNorm/moving_mean"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "BatchNorm/moving_variance"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "BatchNorm_1/beta"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "BatchNorm_1/beta/Adam"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "BatchNorm_1/beta/Adam_1"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "BatchNorm_1/gamma"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "BatchNorm_1/gamma/Adam"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "BatchNorm_1/gamma/Adam_1"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "BatchNorm_1/moving_mean"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "BatchNorm_1/moving_variance"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "BatchNorm_10/beta"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "BatchNorm_10/beta/Adam"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "BatchNorm_10/beta/Adam_1"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "BatchNorm_10/gamma"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "BatchNorm_10/gamma/Adam"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "BatchNorm_10/gamma/Adam_1"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "BatchNorm_10/moving_mean"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "BatchNorm_10/moving_variance"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "BatchNorm_11/beta"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "BatchNorm_11/beta/Adam"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "BatchNorm_11/beta/Adam_1"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "BatchNorm_11/gamma"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "BatchNorm_11/gamma/Adam"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "BatchNorm_11/gamma/Adam_1"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "BatchNorm_11/moving_mean"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "BatchNorm_11/moving_variance"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "BatchNorm_12/beta"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "BatchNorm_12/beta/Adam"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "BatchNorm_12/beta/Adam_1"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "BatchNorm_12/gamma"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "BatchNorm_12/gamma/Adam"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "BatchNorm_12/gamma/Adam_1"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "BatchNorm_12/moving_mean"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "BatchNorm_12/moving_variance"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "BatchNorm_13/beta"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "BatchNorm_13/beta/Adam"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "BatchNorm_13/beta/Adam_1"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "BatchNorm_13/gamma"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "BatchNorm_13/gamma/Adam"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "BatchNorm_13/gamma/Adam_1"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "BatchNorm_13/moving_mean"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "BatchNorm_13/moving_variance"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "BatchNorm_14/beta"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "BatchNorm_14/beta/Adam"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "BatchNorm_14/beta/Adam_1"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "BatchNorm_14/gamma"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "BatchNorm_14/gamma/Adam"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "BatchNorm_14/gamma/Adam_1"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "BatchNorm_14/moving_mean"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "BatchNorm_14/moving_variance"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "BatchNorm_2/beta"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "BatchNorm_2/beta/Adam"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "BatchNorm_2/beta/Adam_1"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "BatchNorm_2/gamma"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "BatchNorm_2/gamma/Adam"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "BatchNorm_2/gamma/Adam_1"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "BatchNorm_2/moving_mean"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "BatchNorm_2/moving_variance"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "BatchNorm_3/beta"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "BatchNorm_3/beta/Adam"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "BatchNorm_3/beta/Adam_1"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "BatchNorm_3/gamma"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "BatchNorm_3/gamma/Adam"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "BatchNorm_3/gamma/Adam_1"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "BatchNorm_3/moving_mean"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "BatchNorm_3/moving_variance"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "BatchNorm_4/beta"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "BatchNorm_4/beta/Adam"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "BatchNorm_4/beta/Adam_1"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "BatchNorm_4/gamma"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "BatchNorm_4/gamma/Adam"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "BatchNorm_4/gamma/Adam_1"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "BatchNorm_4/moving_mean"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "BatchNorm_4/moving_variance"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "BatchNorm_5/beta"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "BatchNorm_5/beta/Adam"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "BatchNorm_5/beta/Adam_1"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "BatchNorm_5/gamma"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "BatchNorm_5/gamma/Adam"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "BatchNorm_5/gamma/Adam_1"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "BatchNorm_5/moving_mean"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "BatchNorm_5/moving_variance"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "BatchNorm_6/beta"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "BatchNorm_6/beta/Adam"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "BatchNorm_6/beta/Adam_1"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "BatchNorm_6/gamma"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "BatchNorm_6/gamma/Adam"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "BatchNorm_6/gamma/Adam_1"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "BatchNorm_6/moving_mean"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "BatchNorm_6/moving_variance"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "BatchNorm_7/beta"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "BatchNorm_7/beta/Adam"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "BatchNorm_7/beta/Adam_1"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "BatchNorm_7/gamma"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "BatchNorm_7/gamma/Adam"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "BatchNorm_7/gamma/Adam_1"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "BatchNorm_7/moving_mean"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "BatchNorm_7/moving_variance"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "BatchNorm_8/beta"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "BatchNorm_8/beta/Adam"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "BatchNorm_8/beta/Adam_1"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "BatchNorm_8/gamma"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "BatchNorm_8/gamma/Adam"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "BatchNorm_8/gamma/Adam_1"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "BatchNorm_8/moving_mean"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "BatchNorm_8/moving_variance"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "BatchNorm_9/beta"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "BatchNorm_9/beta/Adam"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "BatchNorm_9/beta/Adam_1"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "BatchNorm_9/gamma"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "BatchNorm_9/gamma/Adam"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "BatchNorm_9/gamma/Adam_1"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "BatchNorm_9/moving_mean"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "BatchNorm_9/moving_variance"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "conv_1/biases"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "conv_1/biases/Adam"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "conv_1/biases/Adam_1"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "conv_1/weights"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "conv_1/weights/Adam"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "conv_1/weights/Adam_1"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "conv_10/biases"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "conv_10/biases/Adam"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "conv_10/biases/Adam_1"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "conv_10/weights"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "conv_10/weights/Adam"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "conv_10/weights/Adam_1"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_10/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "conv_11/biases"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "conv_11/biases/Adam"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "conv_11/biases/Adam_1"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "conv_11/weights"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "conv_11/weights/Adam"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "conv_11/weights/Adam_1"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_11/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "conv_12/biases"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "conv_12/biases/Adam"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "conv_12/biases/Adam_1"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "conv_12/weights"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "conv_12/weights/Adam"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "conv_12/weights/Adam_1"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_12/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "conv_13/biases"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "conv_13/biases/Adam"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "conv_13/biases/Adam_1"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "conv_13/weights"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "conv_13/weights/Adam"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "conv_13/weights/Adam_1"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_13/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "conv_14/biases"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "conv_14/biases/Adam"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "conv_14/biases/Adam_1"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "conv_14/weights"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "conv_14/weights/Adam"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "conv_14/weights/Adam_1"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_14/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "conv_15/biases"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "conv_15/biases/Adam"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "conv_15/biases/Adam_1"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "conv_15/weights"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "conv_15/weights/Adam"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "conv_15/weights/Adam_1"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_15/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "conv_16/biases"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "conv_16/biases/Adam"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "conv_16/biases/Adam_1"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "conv_16/weights"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "conv_16/weights/Adam"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "conv_16/weights/Adam_1"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_16/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "conv_17/biases"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "conv_17/biases/Adam"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "conv_17/biases/Adam_1"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "conv_17/weights"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "conv_17/weights/Adam"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "conv_17/weights/Adam_1"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_17/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "conv_2/biases"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "conv_2/biases/Adam"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "conv_2/biases/Adam_1"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "conv_2/weights"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "conv_2/weights/Adam"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "conv_2/weights/Adam_1"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_2/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "conv_3/biases"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "conv_3/biases/Adam"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "conv_3/biases/Adam_1"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "conv_3/weights"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "conv_3/weights/Adam"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "conv_3/weights/Adam_1"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_3/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "conv_4/biases"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "conv_4/biases/Adam"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "conv_4/biases/Adam_1"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "conv_4/weights"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "conv_4/weights/Adam"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "conv_4/weights/Adam_1"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_4/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "conv_5/biases"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "conv_5/biases/Adam"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "conv_5/biases/Adam_1"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "conv_5/weights"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "conv_5/weights/Adam"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "conv_5/weights/Adam_1"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_5/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "conv_6/biases"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "conv_6/biases/Adam"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "conv_6/biases/Adam_1"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "conv_6/weights"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "conv_6/weights/Adam"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "conv_6/weights/Adam_1"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_6/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "conv_7/biases"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "conv_7/biases/Adam"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "conv_7/biases/Adam_1"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "conv_7/weights"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "conv_7/weights/Adam"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "conv_7/weights/Adam_1"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_7/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "conv_8/biases"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "conv_8/biases/Adam"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "conv_8/biases/Adam_1"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "conv_8/weights"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "conv_8/weights/Adam"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "conv_8/weights/Adam_1"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_8/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "conv_9/biases"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "conv_9/biases/Adam"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "conv_9/biases/Adam_1"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "conv_9/weights"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "conv_9/weights/Adam"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "conv_9/weights/Adam_1"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_9/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_16"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_17"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_18"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_19"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_21"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_22"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 26
}
